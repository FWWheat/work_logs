[0.000000] (-) TimerEvent: {}
[0.000755] (-) JobUnselected: {'identifier': 'cf_msgs'}
[0.000961] (-) JobUnselected: {'identifier': 'isas_msgs'}
[0.001212] (-) JobUnselected: {'identifier': 'sfuise_msgs'}
[0.001298] (sfuise) JobQueued: {'identifier': 'sfuise', 'dependencies': OrderedDict([('cf_msgs', '/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/cf_msgs'), ('isas_msgs', '/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/isas_msgs'), ('sfuise_msgs', '/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/sfuise_msgs')])}
[0.001445] (sfuise) JobStarted: {'identifier': 'sfuise'}
[0.022522] (sfuise) JobProgress: {'identifier': 'sfuise', 'progress': 'cmake'}
[0.023410] (sfuise) JobProgress: {'identifier': 'sfuise', 'progress': 'build'}
[0.024639] (sfuise) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/build/sfuise', '--', '-j20', '-l20'], 'cwd': '/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/build/sfuise', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('HTTPS_PROXY', 'http://127.0.0.1:7890/'), ('no_proxy', 'localhost,127.0.0.0/8,::1'), ('USER', 'dsh'), ('all_proxy', 'socks://127.0.0.1:7890/'), ('XDG_SESSION_TYPE', 'x11'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/sfuise_msgs/lib:/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/isas_msgs/lib:/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/cf_msgs/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/dsh'), ('CONDA_SHLVL', '0'), ('DESKTOP_SESSION', 'ubuntu'), ('NO_PROXY', 'localhost,127.0.0.0/8,::1'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('DBUS_STARTER_BUS_TYPE', 'session'), ('SYSTEMD_EXEC_PID', '1966'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1001/bus,guid=1f4d29038b845efc5c5d373667eb7984'), ('COLORTERM', 'truecolor'), ('_CE_M', ''), ('IM_CONFIG_PHASE', '1'), ('https_proxy', 'http://127.0.0.1:7890/'), ('ROS_DISTRO', 'humble'), ('GTK_IM_MODULE', 'ibus'), ('LOGNAME', 'dsh'), ('ALL_PROXY', 'socks://127.0.0.1:7890/'), ('http_proxy', 'http://127.0.0.1:7890/'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'dsh'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('_CE_CONDA', ''), ('ROS_LOCALHOST_ONLY', '0'), ('WINDOWPATH', '2'), ('PATH', '/opt/ros/humble/bin:/home/dsh/anaconda3/condabin:/home/dsh/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/dsh-Precision-5680:@/tmp/.ICE-unix/1966,unix/dsh-Precision-5680:/tmp/.ICE-unix/1966'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/7c38b6e3_e6b0_47f6_a746_dfc07f3f32c2'), ('XDG_RUNTIME_DIR', '/run/user/1001'), ('DISPLAY', ':0'), ('LANG', 'en_US_UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1001/gdm/Xauthority'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.633'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1001/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/sfuise_msgs:/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/isas_msgs:/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/cf_msgs:/opt/ros/humble'), ('CONDA_PYTHON_EXE', '/home/dsh/anaconda3/bin/python'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('GPG_AGENT_INFO', '/run/user/1001/gnupg/S.gpg-agent:0:1'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/build/sfuise'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('CONDA_EXE', '/home/dsh/anaconda3/bin/conda'), ('DBUS_STARTER_ADDRESS', 'unix:path=/run/user/1001/bus,guid=1f4d29038b845efc5c5d373667eb7984'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/share/gnome:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/sfuise_msgs/local/lib/python3.10/dist-packages:/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/isas_msgs/local/lib/python3.10/dist-packages:/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/cf_msgs/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('HTTP_PROXY', 'http://127.0.0.1:7890/'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/sfuise_msgs:/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/isas_msgs:/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/install/cf_msgs:/opt/ros/humble')]), 'shell': False}
[0.095789] (sfuise) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target EstimationInterface\x1b[0m\n'}
[0.099652] (-) TimerEvent: {}
[0.104971] (sfuise) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target SplineFusion\x1b[0m\n'}
[0.143817] (sfuise) StdoutLine: {'line': b'[ 25%] \x1b[32mBuilding CXX object CMakeFiles/EstimationInterface.dir/src/EstimationInterface.cpp.o\x1b[0m\n'}
[0.153109] (sfuise) StdoutLine: {'line': b'[ 50%] \x1b[32mBuilding CXX object CMakeFiles/SplineFusion.dir/src/SplineFusion.cpp.o\x1b[0m\n'}
[0.199857] (-) TimerEvent: {}
[0.300544] (-) TimerEvent: {}
[0.401171] (-) TimerEvent: {}
[0.501949] (-) TimerEvent: {}
[0.602671] (-) TimerEvent: {}
[0.703277] (-) TimerEvent: {}
[0.804016] (-) TimerEvent: {}
[0.904808] (-) TimerEvent: {}
[1.005521] (-) TimerEvent: {}
[1.106240] (-) TimerEvent: {}
[1.207062] (-) TimerEvent: {}
[1.307787] (-) TimerEvent: {}
[1.408488] (-) TimerEvent: {}
[1.509153] (-) TimerEvent: {}
[1.609841] (-) TimerEvent: {}
[1.710402] (-) TimerEvent: {}
[1.811037] (-) TimerEvent: {}
[1.911788] (-) TimerEvent: {}
[2.012562] (-) TimerEvent: {}
[2.113122] (-) TimerEvent: {}
[2.213652] (-) TimerEvent: {}
[2.314328] (-) TimerEvent: {}
[2.414940] (-) TimerEvent: {}
[2.515449] (-) TimerEvent: {}
[2.616048] (-) TimerEvent: {}
[2.716677] (-) TimerEvent: {}
[2.817289] (-) TimerEvent: {}
[2.918001] (-) TimerEvent: {}
[3.018484] (-) TimerEvent: {}
[3.118932] (-) TimerEvent: {}
[3.219409] (-) TimerEvent: {}
[3.320049] (-) TimerEvent: {}
[3.420673] (-) TimerEvent: {}
[3.521186] (-) TimerEvent: {}
[3.621754] (-) TimerEvent: {}
[3.722202] (-) TimerEvent: {}
[3.822647] (-) TimerEvent: {}
[3.923110] (-) TimerEvent: {}
[4.023631] (-) TimerEvent: {}
[4.124145] (-) TimerEvent: {}
[4.224665] (-) TimerEvent: {}
[4.325115] (-) TimerEvent: {}
[4.425546] (-) TimerEvent: {}
[4.526037] (-) TimerEvent: {}
[4.626449] (-) TimerEvent: {}
[4.726964] (-) TimerEvent: {}
[4.827455] (-) TimerEvent: {}
[4.927992] (-) TimerEvent: {}
[5.028471] (-) TimerEvent: {}
[5.129017] (-) TimerEvent: {}
[5.229525] (-) TimerEvent: {}
[5.330026] (-) TimerEvent: {}
[5.430487] (-) TimerEvent: {}
[5.530995] (-) TimerEvent: {}
[5.631472] (-) TimerEvent: {}
[5.694850] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:3\x1b[m\x1b[K:\n'}
[5.695161] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:387:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksfuise_msgs::msg::spline\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[5.695253] (sfuise) StderrLine: {'line': b'  387 |     void getSplineMsg(\x1b[01;31m\x1b[Ksfuise_msgs\x1b[m\x1b[K::msg::spline& spline_msg)\n'}
[5.695327] (sfuise) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.731691] (-) TimerEvent: {}
[5.832088] (-) TimerEvent: {}
[5.932577] (-) TimerEvent: {}
[5.997685] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/Linearizer.h:6\x1b[m\x1b[K,\n'}
[5.997963] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:2\x1b[m\x1b[K:\n'}
[5.998053] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:387:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksfuise_msgs::msg::spline\x1b[m\x1b[K\xe2\x80\x99 has not been declared\n'}
[5.998131] (sfuise) StderrLine: {'line': b'  387 |     void getSplineMsg(\x1b[01;31m\x1b[Ksfuise_msgs\x1b[m\x1b[K::msg::spline& spline_msg)\n'}
[5.998203] (sfuise) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.032777] (-) TimerEvent: {}
[6.087741] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineState::getSplineMsg(int&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.088049] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:389:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kdt\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kspline_msg\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.088149] (sfuise) StderrLine: {'line': b'  389 |         spline_msg.\x1b[01;31m\x1b[Kdt\x1b[m\x1b[K = dt_ns;\n'}
[6.088228] (sfuise) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[6.088303] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:390:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kstart_t\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kspline_msg\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.088380] (sfuise) StderrLine: {'line': b'  390 |         spline_msg.\x1b[01;31m\x1b[Kstart_t\x1b[m\x1b[K = start_t_ns;\n'}
[6.088452] (sfuise) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.088520] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:391:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kstart_idx\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kspline_msg\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.088615] (sfuise) StderrLine: {'line': b'  391 |         spline_msg.\x1b[01;31m\x1b[Kstart_idx\x1b[m\x1b[K = start_i;\n'}
[6.088679] (sfuise) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.088740] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:393:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kknot\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Ksfuise_msgs::msg\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[KKnot\x1b[m\x1b[K\xe2\x80\x99?\n'}
[6.088810] (sfuise) StderrLine: {'line': b'  393 |             sfuise_msgs::msg::\x1b[01;31m\x1b[Kknot\x1b[m\x1b[K knot_msg;\n'}
[6.088876] (sfuise) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[6.088951] (sfuise) StderrLine: {'line': b'      |                               \x1b[32m\x1b[KKnot\x1b[m\x1b[K\n'}
[6.101746] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:394:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kknot_msg\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[6.102021] (sfuise) StderrLine: {'line': b'  394 |             \x1b[01;31m\x1b[Kknot_msg\x1b[m\x1b[K.position.x = t_knots[i].x();\n'}
[6.102121] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.102405] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:408:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kknots\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kspline_msg\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.102609] (sfuise) StderrLine: {'line': b'  408 |             spline_msg.\x1b[01;31m\x1b[Kknots\x1b[m\x1b[K.push_back(knot_msg);\n'}
[6.102703] (sfuise) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[6.102783] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:411:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kknot\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Ksfuise_msgs::msg\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[KKnot\x1b[m\x1b[K\xe2\x80\x99?\n'}
[6.102883] (sfuise) StderrLine: {'line': b'  411 |             sfuise_msgs::msg::\x1b[01;31m\x1b[Kknot\x1b[m\x1b[K idle_msg;\n'}
[6.102976] (sfuise) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[6.103047] (sfuise) StderrLine: {'line': b'      |                               \x1b[32m\x1b[KKnot\x1b[m\x1b[K\n'}
[6.114322] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:412:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kidle_msg\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[6.114553] (sfuise) StderrLine: {'line': b'  412 |             \x1b[01;31m\x1b[Kidle_msg\x1b[m\x1b[K.position.x = t_idle[i].x();\n'}
[6.114653] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.114929] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:426:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kidles\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kspline_msg\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.115156] (sfuise) StderrLine: {'line': b'  426 |             spline_msg.\x1b[01;31m\x1b[Kidles\x1b[m\x1b[K.push_back(idle_msg);\n'}
[6.115254] (sfuise) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[6.132976] (-) TimerEvent: {}
[6.233417] (-) TimerEvent: {}
[6.333797] (-) TimerEvent: {}
[6.368229] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineState::getSplineMsg(int&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.368524] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:389:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kdt\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kspline_msg\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.368626] (sfuise) StderrLine: {'line': b'  389 |         spline_msg.\x1b[01;31m\x1b[Kdt\x1b[m\x1b[K = dt_ns;\n'}
[6.368707] (sfuise) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~\x1b[m\x1b[K\n'}
[6.368780] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:390:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kstart_t\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kspline_msg\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.368854] (sfuise) StderrLine: {'line': b'  390 |         spline_msg.\x1b[01;31m\x1b[Kstart_t\x1b[m\x1b[K = start_t_ns;\n'}
[6.368935] (sfuise) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[6.369005] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:391:20:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kstart_idx\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kspline_msg\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.369089] (sfuise) StderrLine: {'line': b'  391 |         spline_msg.\x1b[01;31m\x1b[Kstart_idx\x1b[m\x1b[K = start_i;\n'}
[6.369156] (sfuise) StderrLine: {'line': b'      |                    \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.369236] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:393:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kknot\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Ksfuise_msgs::msg\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[KKnot\x1b[m\x1b[K\xe2\x80\x99?\n'}
[6.369307] (sfuise) StderrLine: {'line': b'  393 |             sfuise_msgs::msg::\x1b[01;31m\x1b[Kknot\x1b[m\x1b[K knot_msg;\n'}
[6.369374] (sfuise) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[6.369441] (sfuise) StderrLine: {'line': b'      |                               \x1b[32m\x1b[KKnot\x1b[m\x1b[K\n'}
[6.383023] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:394:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kknot_msg\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[6.383286] (sfuise) StderrLine: {'line': b'  394 |             \x1b[01;31m\x1b[Kknot_msg\x1b[m\x1b[K.position.x = t_knots[i].x();\n'}
[6.383691] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.383847] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:408:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kknots\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kspline_msg\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.383966] (sfuise) StderrLine: {'line': b'  408 |             spline_msg.\x1b[01;31m\x1b[Kknots\x1b[m\x1b[K.push_back(knot_msg);\n'}
[6.384047] (sfuise) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[6.384121] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:411:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kknot\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Ksfuise_msgs::msg\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[KKnot\x1b[m\x1b[K\xe2\x80\x99?\n'}
[6.384199] (sfuise) StderrLine: {'line': b'  411 |             sfuise_msgs::msg::\x1b[01;31m\x1b[Kknot\x1b[m\x1b[K idle_msg;\n'}
[6.384272] (sfuise) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~~\x1b[m\x1b[K\n'}
[6.384343] (sfuise) StderrLine: {'line': b'      |                               \x1b[32m\x1b[KKnot\x1b[m\x1b[K\n'}
[6.396070] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:412:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kidle_msg\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[6.396302] (sfuise) StderrLine: {'line': b'  412 |             \x1b[01;31m\x1b[Kidle_msg\x1b[m\x1b[K.position.x = t_idle[i].x();\n'}
[6.396404] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.396730] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/SplineState.h:426:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Krequest for member \xe2\x80\x98\x1b[01m\x1b[Kidles\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kspline_msg\x1b[m\x1b[K\xe2\x80\x99, which is of non-class type \xe2\x80\x98\x1b[01m\x1b[Kint\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.396872] (sfuise) StderrLine: {'line': b'  426 |             spline_msg.\x1b[01;31m\x1b[Kidles\x1b[m\x1b[K.push_back(idle_msg);\n'}
[6.396973] (sfuise) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[6.434071] (-) TimerEvent: {}
[6.534544] (-) TimerEvent: {}
[6.635257] (-) TimerEvent: {}
[6.676448] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KEstimationInterface::EstimationInterface()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.676837] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:41:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kexpected \xe2\x80\x98\x1b[01m\x1b[K;\x1b[m\x1b[K\xe2\x80\x99 before \xe2\x80\x98\x1b[01m\x1b[Ksub_start\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.677055] (sfuise) StderrLine: {'line': b'   41 |         \x1b[01;31m\x1b[Ksub_start\x1b[m\x1b[K = this->create_subscription<std_msgs::msg::Time>(\n'}
[6.677220] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[6.735384] (-) TimerEvent: {}
[6.752753] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:55:113:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void>, cf_msgs::msg::Tdoa_<std::allocator<void> >, cf_msgs::msg::Tdoa_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[6.753336] (sfuise) StderrLine: {'line': b'   55 | ionInterface::getTdoaUTILCallback, this, std::placeholders::_1)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[6.753738] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[6.753880] (sfuise) StderrLine: {'line': b'\n'}
[6.754037] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.754199] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.754335] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.754468] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.754639] (sfuise) StderrLine: {'line': b'  363 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[6.754775] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.754923] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.755072] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void>, cf_msgs::msg::Tdoa_<std::allocator<void> >, cf_msgs::msg::Tdoa_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > > >&; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.755212] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void>, cf_msgs::msg::Tdoa_<std::allocator<void> >, cf_msgs::msg::Tdoa_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.755377] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:55:113:\x1b[m\x1b[K   required from here\n'}
[6.755505] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.755653] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.755782] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.755925] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.756073] (sfuise) StderrLine: {'line': b'  374 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[6.756201] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.756330] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.756458] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:55:113:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void>, cf_msgs::msg::Tdoa_<std::allocator<void> >, cf_msgs::msg::Tdoa_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.756600] (sfuise) StderrLine: {'line': b'   55 | ionInterface::getTdoaUTILCallback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.756737] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.756871] (sfuise) StderrLine: {'line': b'\n'}
[6.757015] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.757145] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.757273] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.757403] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.757536] (sfuise) StderrLine: {'line': b'  391 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[6.757663] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.757788] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.757926] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void>, cf_msgs::msg::Tdoa_<std::allocator<void> >, cf_msgs::msg::Tdoa_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > > >; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.758089] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void>, cf_msgs::msg::Tdoa_<std::allocator<void> >, cf_msgs::msg::Tdoa_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.758245] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:55:113:\x1b[m\x1b[K   required from here\n'}
[6.758383] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.758540] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.758677] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.758814] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.758967] (sfuise) StderrLine: {'line': b'  399 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[6.759111] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.759245] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.759384] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:55:113:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void>, cf_msgs::msg::Tdoa_<std::allocator<void> >, cf_msgs::msg::Tdoa_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.759697] (sfuise) StderrLine: {'line': b'   55 | ionInterface::getTdoaUTILCallback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.760016] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.760319] (sfuise) StderrLine: {'line': b'\n'}
[6.760454] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.760592] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.760741] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.760878] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.761037] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[6.761176] (sfuise) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.761312] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void>, cf_msgs::msg::Tdoa_<std::allocator<void> >, cf_msgs::msg::Tdoa_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.761465] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[6.761605] (sfuise) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.761740] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.761882] (sfuise) StderrLine: {'line': b'  383 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[6.762036] (sfuise) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.762174] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void>, cf_msgs::msg::Tdoa_<std::allocator<void> >, cf_msgs::msg::Tdoa_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.762332] (sfuise) StderrLine: {'line': b'  383 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[6.762483] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[6.762624] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:56:80:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[6.762784] (sfuise) StderrLine: {'line': b'   56 | uwb = this->create_publisher<cf_msgs::msg::Tdoa>("tdoa_ds", 400\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[6.762933] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[6.763093] (sfuise) StderrLine: {'line': b'\n'}
[6.763243] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.763388] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.763534] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.763681] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.763848] (sfuise) StderrLine: {'line': b'  363 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[6.764012] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.764152] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.764290] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Publisher<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.764433] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Publisher<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.764575] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:56:80:\x1b[m\x1b[K   required from here\n'}
[6.764709] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.764862] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.765021] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.765162] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.765330] (sfuise) StderrLine: {'line': b'  374 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[6.765473] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.765613] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.765752] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:56:80:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.765919] (sfuise) StderrLine: {'line': b'   56 | uwb = this->create_publisher<cf_msgs::msg::Tdoa>("tdoa_ds", 400\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.766081] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.766222] (sfuise) StderrLine: {'line': b'\n'}
[6.766359] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.766518] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.766654] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.766790] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.766944] (sfuise) StderrLine: {'line': b'  391 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[6.767087] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.767221] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.767364] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Publisher<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.767505] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Publisher<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.767652] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:56:80:\x1b[m\x1b[K   required from here\n'}
[6.767787] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.767946] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.768090] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.768224] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.768368] (sfuise) StderrLine: {'line': b'  399 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[6.768502] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.768637] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.768774] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:56:80:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.768920] (sfuise) StderrLine: {'line': b'   56 | uwb = this->create_publisher<cf_msgs::msg::Tdoa>("tdoa_ds", 400\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.769066] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.769199] (sfuise) StderrLine: {'line': b'\n'}
[6.769332] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.769467] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.769602] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.769748] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.769886] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[6.770042] (sfuise) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.770182] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.770327] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[6.770464] (sfuise) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.770602] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.770755] (sfuise) StderrLine: {'line': b'  383 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[6.770890] (sfuise) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.771039] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<cf_msgs::msg::Tdoa_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.771185] (sfuise) StderrLine: {'line': b'  383 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[6.771324] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[6.826429] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:59:112:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::RTLSStick_<std::allocator<void> >, isas_msgs::msg::RTLSStick_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[6.826777] (sfuise) StderrLine: {'line': b'   59 | tionInterface::getToaISASCallback, this, std::placeholders::_1)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[6.827142] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[6.827444] (sfuise) StderrLine: {'line': b'\n'}
[6.827538] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.827616] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.827710] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.827784] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.827866] (sfuise) StderrLine: {'line': b'  363 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[6.827950] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.828021] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.828091] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::RTLSStick_<std::allocator<void> >, isas_msgs::msg::RTLSStick_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > > >&; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.828190] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::RTLSStick_<std::allocator<void> >, isas_msgs::msg::RTLSStick_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.828275] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:59:112:\x1b[m\x1b[K   required from here\n'}
[6.828343] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.828416] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.828482] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.828551] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.828624] (sfuise) StderrLine: {'line': b'  374 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[6.828692] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.828758] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.828825] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:59:112:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::RTLSStick_<std::allocator<void> >, isas_msgs::msg::RTLSStick_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.828899] (sfuise) StderrLine: {'line': b'   59 | tionInterface::getToaISASCallback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.828979] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.829052] (sfuise) StderrLine: {'line': b'\n'}
[6.829117] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.829186] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.829252] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.829320] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.829393] (sfuise) StderrLine: {'line': b'  391 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[6.829461] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.829527] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.829594] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::RTLSStick_<std::allocator<void> >, isas_msgs::msg::RTLSStick_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > > >; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.829679] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::RTLSStick_<std::allocator<void> >, isas_msgs::msg::RTLSStick_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.829753] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:59:112:\x1b[m\x1b[K   required from here\n'}
[6.829820] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.829888] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.829964] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.830038] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.830112] (sfuise) StderrLine: {'line': b'  399 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[6.830181] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.830243] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.830309] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:59:112:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::RTLSStick_<std::allocator<void> >, isas_msgs::msg::RTLSStick_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.830380] (sfuise) StderrLine: {'line': b'   59 | tionInterface::getToaISASCallback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.830447] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.830510] (sfuise) StderrLine: {'line': b'\n'}
[6.830574] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.830639] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.830704] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.830769] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.830837] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[6.830913] (sfuise) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.830982] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::RTLSStick_<std::allocator<void> >, isas_msgs::msg::RTLSStick_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.831056] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[6.831122] (sfuise) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.831192] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.831270] (sfuise) StderrLine: {'line': b'  383 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[6.831334] (sfuise) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.831398] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::RTLSStick_<std::allocator<void> >, isas_msgs::msg::RTLSStick_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.831467] (sfuise) StderrLine: {'line': b'  383 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[6.831532] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[6.831851] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:60:86:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[6.831963] (sfuise) StderrLine: {'line': b'   60 | this->create_publisher<isas_msgs::msg::RTLSStick>("toa_ds", 400\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[6.832039] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[6.832117] (sfuise) StderrLine: {'line': b'\n'}
[6.832202] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.832283] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.832363] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.832444] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.832525] (sfuise) StderrLine: {'line': b'  363 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[6.832600] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.832676] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.832754] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Publisher<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.833398] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Publisher<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.833533] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:60:86:\x1b[m\x1b[K   required from here\n'}
[6.833630] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.833719] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.833810] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.833884] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.833980] (sfuise) StderrLine: {'line': b'  374 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[6.834063] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.834139] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.834218] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:60:86:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.834299] (sfuise) StderrLine: {'line': b'   60 | this->create_publisher<isas_msgs::msg::RTLSStick>("toa_ds", 400\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.834377] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.834450] (sfuise) StderrLine: {'line': b'\n'}
[6.834525] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.834599] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.834673] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.834748] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.834830] (sfuise) StderrLine: {'line': b'  391 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[6.834912] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.834990] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.835060] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Publisher<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.835139] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Publisher<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.835216] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:60:86:\x1b[m\x1b[K   required from here\n'}
[6.835289] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.835365] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.835437] (-) TimerEvent: {}
[6.835594] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.835690] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.835785] (sfuise) StderrLine: {'line': b'  399 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[6.835861] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.835940] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.836017] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:60:86:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.836094] (sfuise) StderrLine: {'line': b'   60 | this->create_publisher<isas_msgs::msg::RTLSStick>("toa_ds", 400\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.836166] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.836238] (sfuise) StderrLine: {'line': b'\n'}
[6.836314] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.836386] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.836457] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.836527] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.836600] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[6.836673] (sfuise) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.836743] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.836830] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[6.836912] (sfuise) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.836987] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.837061] (sfuise) StderrLine: {'line': b'  383 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[6.837130] (sfuise) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.837200] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<isas_msgs::msg::RTLSStick_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.837273] (sfuise) StderrLine: {'line': b'  383 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[6.837341] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[6.897413] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:69:126:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::Anchorlist_<std::allocator<void> >, isas_msgs::msg::Anchorlist_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[6.897762] (sfuise) StderrLine: {'line': b'   69 | ce::getAnchorListFromISASCallback, this, std::placeholders::_1)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[6.898076] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[6.898401] (sfuise) StderrLine: {'line': b'\n'}
[6.898497] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.898596] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.898682] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.898757] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.898845] (sfuise) StderrLine: {'line': b'  363 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[6.898933] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.899008] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.899079] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::Anchorlist_<std::allocator<void> >, isas_msgs::msg::Anchorlist_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > > >&; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.899161] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::Anchorlist_<std::allocator<void> >, isas_msgs::msg::Anchorlist_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.899240] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:69:126:\x1b[m\x1b[K   required from here\n'}
[6.899313] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.899390] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.899467] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.899539] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.899620] (sfuise) StderrLine: {'line': b'  374 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[6.899693] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.899765] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.899835] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:69:126:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::Anchorlist_<std::allocator<void> >, isas_msgs::msg::Anchorlist_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.899932] (sfuise) StderrLine: {'line': b'   69 | ce::getAnchorListFromISASCallback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.900006] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.900079] (sfuise) StderrLine: {'line': b'\n'}
[6.900147] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.900218] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.900287] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.900353] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.900429] (sfuise) StderrLine: {'line': b'  391 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[6.900499] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.900566] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.900639] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::Anchorlist_<std::allocator<void> >, isas_msgs::msg::Anchorlist_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > > >; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.900718] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::Anchorlist_<std::allocator<void> >, isas_msgs::msg::Anchorlist_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.900790] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:69:126:\x1b[m\x1b[K   required from here\n'}
[6.900856] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.900937] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.901011] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.901081] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.901156] (sfuise) StderrLine: {'line': b'  399 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[6.901227] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.901293] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.901363] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:69:126:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::Anchorlist_<std::allocator<void> >, isas_msgs::msg::Anchorlist_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.901442] (sfuise) StderrLine: {'line': b'   69 | ce::getAnchorListFromISASCallback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.901513] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.901584] (sfuise) StderrLine: {'line': b'\n'}
[6.901651] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.901718] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.901784] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.901855] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.901940] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[6.902010] (sfuise) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.902078] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::Anchorlist_<std::allocator<void> >, isas_msgs::msg::Anchorlist_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.902151] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[6.902220] (sfuise) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.902289] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.902359] (sfuise) StderrLine: {'line': b'  383 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[6.902428] (sfuise) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.902494] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void>, isas_msgs::msg::Anchorlist_<std::allocator<void> >, isas_msgs::msg::Anchorlist_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.902567] (sfuise) StderrLine: {'line': b'  383 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[6.902634] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[6.903607] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:76:92:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[6.903827] (sfuise) StderrLine: {'line': b'   76 | reate_publisher<isas_msgs::msg::Anchorlist>("anchor_list", 1000\x1b[01;31m\x1b[K)\x1b[m\x1b[K;\n'}
[6.904327] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[6.904427] (sfuise) StderrLine: {'line': b'\n'}
[6.904506] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.904582] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.904668] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.904746] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.904827] (sfuise) StderrLine: {'line': b'  363 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[6.904897] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.904990] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.905057] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Publisher<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > >&; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.905140] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Publisher<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.905213] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:76:92:\x1b[m\x1b[K   required from here\n'}
[6.905282] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.905353] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.905423] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.905491] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.905559] (sfuise) StderrLine: {'line': b'  374 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[6.905628] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.905693] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.905760] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:76:92:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.905835] (sfuise) StderrLine: {'line': b'   76 | reate_publisher<isas_msgs::msg::Anchorlist>("anchor_list", 1000\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.905907] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.905978] (sfuise) StderrLine: {'line': b'\n'}
[6.906045] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.906112] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.906178] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.906243] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.906314] (sfuise) StderrLine: {'line': b'  391 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[6.906378] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.906444] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.906506] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Publisher<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > >; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.906575] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Publisher<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.906650] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:76:92:\x1b[m\x1b[K   required from here\n'}
[6.906717] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.906787] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.906854] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.906927] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.907001] (sfuise) StderrLine: {'line': b'  399 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[6.907068] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.907133] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.907199] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:76:92:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.907268] (sfuise) StderrLine: {'line': b'   76 | reate_publisher<isas_msgs::msg::Anchorlist>("anchor_list", 1000\x1b[01;36m\x1b[K)\x1b[m\x1b[K;\n'}
[6.907334] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.907401] (sfuise) StderrLine: {'line': b'\n'}
[6.907465] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.907530] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.907595] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.907660] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.907728] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[6.907794] (sfuise) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.907858] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.907955] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[6.908022] (sfuise) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.908086] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.908157] (sfuise) StderrLine: {'line': b'  383 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[6.908223] (sfuise) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.908289] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<isas_msgs::msg::Anchorlist_<std::allocator<void> >, std::allocator<void> > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.908359] (sfuise) StderrLine: {'line': b'  383 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[6.908423] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[6.935673] (-) TimerEvent: {}
[6.986238] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:98:122:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >::SharedPtr\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99)\n'}
[6.986531] (sfuise) StderrLine: {'line': b'   98 | nterface::getEstCallback, this, std::placeholders::_1)\x1b[01;31m\x1b[K)\x1b[m\x1b[K;// \xe8\xae\xa2\xe9\x98\x85\xe4\xbc\xb0\xe8\xae\xa1\xe7\xaa\x97\xe5\x8f\xa3\xe6\x95\xb0\xe6\x8d\xae\n'}
[6.986619] (sfuise) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^\x1b[m\x1b[K\n'}
[6.986692] (sfuise) StderrLine: {'line': b'\n'}
[6.986764] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.986837] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.986920] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.986993] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<const std::shared_ptr<_Yp>&> std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Yp>&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.987067] (sfuise) StderrLine: {'line': b'  363 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr<_Yp>& __r) noexcept\n'}
[6.987133] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.987193] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.987255] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = const std::shared_ptr<rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > > >&; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.987329] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:363:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<const std::shared_ptr<_Tp>&> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(const std::shared_ptr<_Tp>&) [with _Yp = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.987397] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:98:122:\x1b[m\x1b[K   required from here\n'}
[6.987459] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.987523] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.987583] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.987642] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::auto_ptr<_Up> > std::shared_ptr<_Tp>::operator=(std::auto_ptr<_Up>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.987720] (sfuise) StderrLine: {'line': b'  374 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(auto_ptr<_Yp>&& __r)\n'}
[6.987781] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.987842] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:374:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.987906] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:98:122:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::auto_ptr<_Up>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.987988] (sfuise) StderrLine: {'line': b'   98 | nterface::getEstCallback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;// \xe8\xae\xa2\xe9\x98\x85\xe4\xbc\xb0\xe8\xae\xa1\xe7\xaa\x97\xe5\x8f\xa3\xe6\x95\xb0\xe6\x8d\xae\n'}
[6.988054] (sfuise) StderrLine: {'line': b'      |                                                       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.988120] (sfuise) StderrLine: {'line': b'\n'}
[6.988181] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.988243] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.988306] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.988368] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<_Tp>::_Assignable<std::shared_ptr<_Yp> > std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Yp>&&) [with _Yp = _Yp; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.988434] (sfuise) StderrLine: {'line': b'  391 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr<_Yp>&& __r) noexcept\n'}
[6.988498] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.988561] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.988626] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/bits/shared_ptr.h: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> template<class _Arg> using _Assignable = typename std::enable_if<std::is_assignable<std::__shared_ptr<_Tp>&, _Arg>::value, std::shared_ptr<_Tp>&>::type [with _Arg = std::shared_ptr<rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > > >; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[6.988696] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:391:2:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp> std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::_Assignable<std::shared_ptr<_Tp> > std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >::operator=<_Yp>(std::shared_ptr<_Tp>&&) [with _Yp = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.988768] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:98:122:\x1b[m\x1b[K   required from here\n'}
[6.988830] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:130:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.988895] (sfuise) StderrLine: {'line': b'  130 |         using \x1b[01;31m\x1b[K_Assignable\x1b[m\x1b[K = typename enable_if<\n'}
[6.988965] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.989026] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Yp, class _Del> std::shared_ptr<_Tp>::_Assignable<std::unique_ptr<_Up, _Ep> > std::shared_ptr<_Tp>::operator=(std::unique_ptr<_Up, _Ep>&&) [with _Yp = _Yp; _Del = _Del; _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.989101] (sfuise) StderrLine: {'line': b'  399 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(unique_ptr<_Yp, _Del>&& __r)\n'}
[6.989162] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.989221] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:399:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[6.989284] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:98:122:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<_Tp, _Dp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.989356] (sfuise) StderrLine: {'line': b'   98 | nterface::getEstCallback, this, std::placeholders::_1)\x1b[01;36m\x1b[K)\x1b[m\x1b[K;// \xe8\xae\xa2\xe9\x98\x85\xe4\xbc\xb0\xe8\xae\xa1\xe7\xaa\x97\xe5\x8f\xa3\xe6\x95\xb0\xe6\x8d\xae\n'}
[6.989416] (sfuise) StderrLine: {'line': b'      |                                                       \x1b[01;36m\x1b[K^\x1b[m\x1b[K\n'}
[6.989475] (sfuise) StderrLine: {'line': b'\n'}
[6.989536] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/memory:77\x1b[m\x1b[K,\n'}
[6.989596] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[6.989656] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[6.989715] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:19:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(const std::shared_ptr<_Tp>&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.989777] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const shared_ptr&) noexcept = default;\n'}
[6.989837] (sfuise) StderrLine: {'line': b'      |                   \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.989898] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:359:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.989975] (sfuise) StderrLine: {'line': b'  359 |       shared_ptr& operator=(\x1b[01;36m\x1b[Kconst shared_ptr&\x1b[m\x1b[K) noexcept = default;\n'}
[6.990038] (sfuise) StderrLine: {'line': b'      |                             \x1b[01;36m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[6.990102] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<_Tp>& std::shared_ptr<_Tp>::operator=(std::shared_ptr<_Tp>&&) [with _Tp = rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.990168] (sfuise) StderrLine: {'line': b'  383 |       \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(shared_ptr&& __r) noexcept\n'}
[6.990227] (sfuise) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[6.990287] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/bits/shared_ptr.h:383:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<rclcpp::Subscription<std_msgs::msg::String_<std::allocator<void> > > >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[6.990354] (sfuise) StderrLine: {'line': b'  383 |       operator=(\x1b[01;36m\x1b[Kshared_ptr&& __r\x1b[m\x1b[K) noexcept\n'}
[6.990418] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;36m\x1b[K~~~~~~~~~~~~~^~~\x1b[m\x1b[K\n'}
[7.000077] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid EstimationInterface::getEstCallback(sfuise_msgs::msg::Estimate_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.000302] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:211:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator!\x1b[m\x1b[K\xe2\x80\x99 (operand type is \xe2\x80\x98\x1b[01m\x1b[Ksfuise_msgs::msg::Estimate_<std::allocator<void> >::_if_full_window_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Bool_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99})\n'}
[7.000415] (sfuise) StderrLine: {'line': b'  211 |             pubOpt(spline_w, \x1b[01;31m\x1b[K!est_msg->if_full_window\x1b[m\x1b[K);\n'}
[7.000493] (sfuise) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.000570] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:211:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Koperator!(bool)\x1b[m\x1b[K\xe2\x80\x99 (built-in)\n'}
[7.000651] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:211:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Ksfuise_msgs::msg::Estimate_<std::allocator<void> >::_if_full_window_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Bool_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kbool\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.000727] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/libstatistics_collector/libstatistics_collector/moving_average_statistics/moving_average.hpp:30\x1b[m\x1b[K,\n'}
[7.000795] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/libstatistics_collector/libstatistics_collector/collector/collector.hpp:22\x1b[m\x1b[K,\n'}
[7.000866] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/libstatistics_collector/libstatistics_collector/topic_statistics_collector/topic_statistics_collector.hpp:24\x1b[m\x1b[K,\n'}
[7.000950] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/libstatistics_collector/libstatistics_collector/topic_statistics_collector/received_message_age.hpp:26\x1b[m\x1b[K,\n'}
[7.001020] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:26\x1b[m\x1b[K,\n'}
[7.001093] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[7.001159] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[7.001223] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.001287] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.001353] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.001419] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.001483] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.001552] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.001617] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.001680] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[7.001757] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcpputils/rcpputils/thread_safety_annotations.hpp:55:27:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kconst std::mutex& operator!(const std::mutex&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.001825] (sfuise) StderrLine: {'line': b'   55 | inline const std::mutex & \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K!(const std::mutex & a)\n'}
[7.001890] (sfuise) StderrLine: {'line': b'      |                           \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[7.001968] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rcpputils/rcpputils/thread_safety_annotations.hpp:55:56:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Ksfuise_msgs::msg::Estimate_<std::allocator<void> >::_if_full_window_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Bool_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::mutex&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.002038] (sfuise) StderrLine: {'line': b'   55 | inline const std::mutex & operator!(\x1b[01;36m\x1b[Kconst std::mutex & a\x1b[m\x1b[K)\n'}
[7.002104] (sfuise) StderrLine: {'line': b'      |                                     \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[7.002168] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:214:36:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot convert \xe2\x80\x98\x1b[01m\x1b[Ksfuise_msgs::msg::Estimate_<std::allocator<void> >::_runtime_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd_msgs::msg::Float64_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kdouble\x1b[m\x1b[K\xe2\x80\x99 in assignment\n'}
[7.002238] (sfuise) StderrLine: {'line': b'  214 |         average_runtime = \x1b[01;31m\x1b[Kest_msg->runtime\x1b[m\x1b[K; // \xe6\x9b\xb4\xe6\x96\xb0\xe5\xb9\xb3\xe5\x9d\x87\xe8\xbf\x90\xe8\xa1\x8c\xe6\x97\xb6\xe9\x97\xb4\n'}
[7.002303] (sfuise) StderrLine: {'line': b'      |                           \x1b[01;31m\x1b[K~~~~~~~~~^~~~~~~\x1b[m\x1b[K\n'}
[7.002369] (sfuise) StderrLine: {'line': b'      |                                    \x1b[01;31m\x1b[K|\x1b[m\x1b[K\n'}
[7.002439] (sfuise) StderrLine: {'line': b'      |                                    \x1b[01;31m\x1b[Ksfuise_msgs::msg::Estimate_<std::allocator<void> >::_runtime_type {aka std_msgs::msg::Float64_<std::allocator<void> >}\x1b[m\x1b[K\n'}
[7.016461] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid EstimationInterface::getToaISASCallback(isas_msgs::msg::RTLSStick_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.016691] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:308:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >::publish(std::__shared_ptr_access<isas_msgs::msg::RTLSStick_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.017365] (sfuise) StderrLine: {'line': b'  308 |             \x1b[01;31m\x1b[Kpub_uwb->publish(*uwb_msg)\x1b[m\x1b[K; // \xe5\x8f\x91\xe5\xb8\x83UWB\xe6\x95\xb0\xe6\x8d\xae\n'}
[7.017485] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.017568] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[7.017645] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[7.017721] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[7.017789] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.017856] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.017934] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.018002] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.018068] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.018137] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.018202] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.018266] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[7.018345] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:251:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with T = T; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.018433] (sfuise) StderrLine: {'line': b'  251 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)\n'}
[7.018503] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.018571] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:251:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.018637] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:308:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kisas_msgs::msg::RTLSStick_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.018707] (sfuise) StderrLine: {'line': b'  308 |             \x1b[01;36m\x1b[Kpub_uwb->publish(*uwb_msg)\x1b[m\x1b[K; // \xe5\x8f\x91\xe5\xb8\x83UWB\xe6\x95\xb0\xe6\x8d\xae\n'}
[7.018773] (sfuise) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.018837] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[7.018906] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[7.018978] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[7.019044] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.019107] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.019171] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.019240] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.019303] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.019366] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.019428] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.019492] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[7.019559] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:292:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with T = T; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.019630] (sfuise) StderrLine: {'line': b'  292 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[7.019696] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.019768] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:292:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.019832] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/c++/11/bits/move.h:57\x1b[m\x1b[K,\n'}
[7.019896] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_pair.h:59\x1b[m\x1b[K,\n'}
[7.019975] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/bits/stl_algobase.h:64\x1b[m\x1b[K,\n'}
[7.020039] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/c++/11/memory:63\x1b[m\x1b[K,\n'}
[7.020102] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153\x1b[m\x1b[K,\n'}
[7.020166] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[7.020230] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/type_traits: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<bool _Cond, class _Tp> using enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.020298] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:292:3:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, std_msgs::msg::String_<std::allocator<void> > >::value), void> rclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >::publish<T>(const T&) [with T = isas_msgs::msg::RTLSStick_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.020369] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:308:29:\x1b[m\x1b[K   required from here\n'}
[7.020434] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/type_traits:2579:11:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.020500] (sfuise) StderrLine: {'line': b' 2579 |     using \x1b[01;31m\x1b[Kenable_if_t\x1b[m\x1b[K = typename enable_if<_Cond, _Tp>::type;\n'}
[7.020565] (sfuise) StderrLine: {'line': b'      |           \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.020638] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[7.020708] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[7.020776] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[7.020845] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.020918] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.020992] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.021065] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.021136] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.021203] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.021928] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.022085] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[7.022170] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:322:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with T = T; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.022293] (sfuise) StderrLine: {'line': b'  322 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, PublishedTypeDeleter> msg)\n'}
[7.022366] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.022437] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:322:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.022520] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:308:29:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kisas_msgs::msg::RTLSStick_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.022598] (sfuise) StderrLine: {'line': b'  308 |             \x1b[01;36m\x1b[Kpub_uwb->publish(*uwb_msg)\x1b[m\x1b[K; // \xe5\x8f\x91\xe5\xb8\x83UWB\xe6\x95\xb0\xe6\x8d\xae\n'}
[7.022669] (sfuise) StderrLine: {'line': b'      |             \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.022736] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[7.022802] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[7.022869] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[7.022942] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.023010] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.023074] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.023139] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.023204] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.023267] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.023335] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.023399] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[7.023466] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:364:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with T = T; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.023537] (sfuise) StderrLine: {'line': b'  364 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[7.023602] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.023666] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:364:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.023732] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:383:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.023804] (sfuise) StderrLine: {'line': b'  383 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t & serialized_msg)\n'}
[7.023868] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.023939] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:383:44:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<isas_msgs::msg::RTLSStick_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kisas_msgs::msg::RTLSStick_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst rcl_serialized_message_t&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst rcutils_uint8_array_s&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[7.024014] (sfuise) StderrLine: {'line': b'  383 |   publish(\x1b[01;36m\x1b[Kconst rcl_serialized_message_t & serialized_msg\x1b[m\x1b[K)\n'}
[7.024078] (sfuise) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.024142] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:389:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.024213] (sfuise) StderrLine: {'line': b'  389 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const SerializedMessage & serialized_msg)\n'}
[7.024281] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.024345] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:389:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<isas_msgs::msg::RTLSStick_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kisas_msgs::msg::RTLSStick_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::SerializedMessage&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.024416] (sfuise) StderrLine: {'line': b'  389 |   publish(\x1b[01;36m\x1b[Kconst SerializedMessage & serialized_msg\x1b[m\x1b[K)\n'}
[7.024480] (sfuise) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.024544] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:403:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = std_msgs::msg::String_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.024611] (sfuise) StderrLine: {'line': b'  403 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)\n'}
[7.024679] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.024743] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:403:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<isas_msgs::msg::RTLSStick_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kisas_msgs::msg::RTLSStick_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::LoanedMessage<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.024815] (sfuise) StderrLine: {'line': b'  403 | (\x1b[01;36m\x1b[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg\x1b[m\x1b[K)\n'}
[7.024881] (sfuise) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.024953] (sfuise) StderrLine: {'line': b'\n'}
[7.025019] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid EstimationInterface::getTdoaUTILCallback(cf_msgs::msg::Tdoa_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.025086] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:321:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >::publish(std::__shared_ptr_access<cf_msgs::msg::Tdoa_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.025154] (sfuise) StderrLine: {'line': b'  321 |             if (pub_uwb) \x1b[01;31m\x1b[Kpub_uwb->publish(*msg)\x1b[m\x1b[K; // \xe5\x8f\x91\xe5\xb8\x83TDOA\xe6\x95\xb0\xe6\x8d\xae\n'}
[7.025219] (sfuise) StderrLine: {'line': b'      |                          \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[7.025282] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[7.025353] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[7.025418] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[7.025479] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.025550] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.025615] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.025678] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.025743] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.025807] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.025872] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.025942] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[7.026012] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:251:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with T = T; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.026089] (sfuise) StderrLine: {'line': b'  251 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)\n'}
[7.026153] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.026217] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:251:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.026282] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:321:42:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kcf_msgs::msg::Tdoa_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.026348] (sfuise) StderrLine: {'line': b'  321 |             if (pub_uwb) \x1b[01;36m\x1b[Kpub_uwb->publish(*msg)\x1b[m\x1b[K; // \xe5\x8f\x91\xe5\xb8\x83TDOA\xe6\x95\xb0\xe6\x8d\xae\n'}
[7.026412] (sfuise) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[7.026475] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[7.026537] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[7.026599] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[7.026665] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.026729] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.026791] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.026854] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.026926] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.026995] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.027058] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.027123] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[7.027192] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:292:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with T = T; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.027262] (sfuise) StderrLine: {'line': b'  292 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[7.027327] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.027390] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:292:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.027456] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:322:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with T = T; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.027534] (sfuise) StderrLine: {'line': b'  322 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, PublishedTypeDeleter> msg)\n'}
[7.027598] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.027660] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:322:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.027724] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:321:42:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kcf_msgs::msg::Tdoa_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.027796] (sfuise) StderrLine: {'line': b'  321 |             if (pub_uwb) \x1b[01;36m\x1b[Kpub_uwb->publish(*msg)\x1b[m\x1b[K; // \xe5\x8f\x91\xe5\xb8\x83TDOA\xe6\x95\xb0\xe6\x8d\xae\n'}
[7.027858] (sfuise) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~^~~~~~\x1b[m\x1b[K\n'}
[7.027928] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[7.027996] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[7.028060] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[7.028123] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.028186] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.028250] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.028312] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.028374] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.028438] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.028503] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.028567] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[7.028631] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:364:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with T = T; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.028707] (sfuise) StderrLine: {'line': b'  364 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[7.028772] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.028837] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:364:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.028908] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:383:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.028987] (sfuise) StderrLine: {'line': b'  383 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t & serialized_msg)\n'}
[7.029054] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.029122] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:383:44:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<cf_msgs::msg::Tdoa_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kcf_msgs::msg::Tdoa_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst rcl_serialized_message_t&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst rcutils_uint8_array_s&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[7.029190] (sfuise) StderrLine: {'line': b'  383 |   publish(\x1b[01;36m\x1b[Kconst rcl_serialized_message_t & serialized_msg\x1b[m\x1b[K)\n'}
[7.029253] (sfuise) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.029316] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:389:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.029382] (sfuise) StderrLine: {'line': b'  389 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const SerializedMessage & serialized_msg)\n'}
[7.029445] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.029506] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:389:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<cf_msgs::msg::Tdoa_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kcf_msgs::msg::Tdoa_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::SerializedMessage&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.029575] (sfuise) StderrLine: {'line': b'  389 |   publish(\x1b[01;36m\x1b[Kconst SerializedMessage & serialized_msg\x1b[m\x1b[K)\n'}
[7.029642] (sfuise) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.029708] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:403:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = std_msgs::msg::String_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.029777] (sfuise) StderrLine: {'line': b'  403 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)\n'}
[7.029842] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.029915] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:403:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::__shared_ptr_access<cf_msgs::msg::Tdoa_<std::allocator<void> >, __gnu_cxx::_S_atomic, false, false>::element_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kcf_msgs::msg::Tdoa_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::LoanedMessage<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.029987] (sfuise) StderrLine: {'line': b'  403 | (\x1b[01;36m\x1b[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg\x1b[m\x1b[K)\n'}
[7.030050] (sfuise) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.030120] (sfuise) StderrLine: {'line': b'\n'}
[7.035869] (-) TimerEvent: {}
[7.065869] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid EstimationInterface::publishAnchor()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.066628] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:415:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Publisher<std_msgs::msg::String_<std::allocator<void> > >::publish(isas_msgs::msg::Anchorlist_<std::allocator<void> >&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.066816] (sfuise) StderrLine: {'line': b'  415 |         \x1b[01;31m\x1b[Kanchor_pub->publish(anchor_list_msg)\x1b[m\x1b[K;\n'}
[7.066974] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.067118] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[7.067251] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[7.067407] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[7.067553] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.067691] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.067822] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.067967] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.068108] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.068237] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.068367] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.068500] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[7.068637] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:251:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::ros_message_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::ros_message_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::ros_message_type>::allocator_type> >::type>) [with T = T; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.068810] (sfuise) StderrLine: {'line': b'  251 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, ROSMessageTypeDeleter> msg)\n'}
[7.068971] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.069123] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:251:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.069264] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:415:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kisas_msgs::msg::Anchorlist_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.069407] (sfuise) StderrLine: {'line': b'  415 |         \x1b[01;36m\x1b[Kanchor_pub->publish(anchor_list_msg)\x1b[m\x1b[K;\n'}
[7.069543] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.069679] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[7.069816] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[7.069986] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[7.070138] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.070276] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.070415] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.070553] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.070690] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.070829] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.071002] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.071145] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[7.071292] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:292:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(rosidl_generator_traits::is_message<T>::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::ros_message_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with T = T; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.071450] (sfuise) StderrLine: {'line': b'  292 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[7.071589] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.071730] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:292:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.071873] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:322:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(std::unique_ptr<T, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type>::rebind_alloc<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>, std::allocator<typename rclcpp::TypeAdapter<MessageT>::custom_type> >::value, std::default_delete<typename rclcpp::TypeAdapter<MessageT>::custom_type>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Allocator>::rebind_traits<typename rclcpp::TypeAdapter<MessageT, void, void>::custom_type>::allocator_type> >::type>) [with T = T; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.072126] (sfuise) StderrLine: {'line': b'  322 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(std::unique_ptr<T, PublishedTypeDeleter> msg)\n'}
[7.072272] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.072408] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:322:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.072547] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:415:28:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kisas_msgs::msg::Anchorlist_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 is not derived from \xe2\x80\x98\x1b[01m\x1b[Kstd::unique_ptr<T, std::default_delete<std_msgs::msg::String_<std::allocator<void> > > >\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.072692] (sfuise) StderrLine: {'line': b'  415 |         \x1b[01;36m\x1b[Kanchor_pub->publish(anchor_list_msg)\x1b[m\x1b[K;\n'}
[7.072828] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.072977] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/topic_statistics/subscription_topic_statistics.hpp:31\x1b[m\x1b[K,\n'}
[7.073119] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription.hpp:50\x1b[m\x1b[K,\n'}
[7.073255] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:25\x1b[m\x1b[K,\n'}
[7.073392] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[7.073528] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[7.073665] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[7.073832] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[7.073984] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[7.074125] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[7.074263] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.074398] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[7.074532] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:364:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class T> std::enable_if_t<(typename rclcpp::TypeAdapter<MessageT>::is_specialized::value && std::is_same<T, typename rclcpp::TypeAdapter<MessageT>::custom_type>::value)> rclcpp::Publisher<MessageT, AllocatorT>::publish(const T&) [with T = T; MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.074707] (sfuise) StderrLine: {'line': b'  364 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const T & msg)\n'}
[7.074857] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.075009] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:364:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.075149] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:383:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rcl_serialized_message_t&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; rcl_serialized_message_t = rcutils_uint8_array_s]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.075290] (sfuise) StderrLine: {'line': b'  383 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const rcl_serialized_message_t & serialized_msg)\n'}
[7.075442] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.075577] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:383:44:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kisas_msgs::msg::Anchorlist_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rcl_serialized_message_t&\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst rcutils_uint8_array_s&\x1b[m\x1b[K\xe2\x80\x99}\n'}
[7.075717] (sfuise) StderrLine: {'line': b'  383 |   publish(\x1b[01;36m\x1b[Kconst rcl_serialized_message_t & serialized_msg\x1b[m\x1b[K)\n'}
[7.075860] (sfuise) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.076016] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:389:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(const rclcpp::SerializedMessage&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.076164] (sfuise) StderrLine: {'line': b'  389 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(const SerializedMessage & serialized_msg)\n'}
[7.076302] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.076442] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:389:37:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kisas_msgs::msg::Anchorlist_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst rclcpp::SerializedMessage&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.076588] (sfuise) StderrLine: {'line': b'  389 |   publish(\x1b[01;36m\x1b[Kconst SerializedMessage & serialized_msg\x1b[m\x1b[K)\n'}
[7.076729] (sfuise) StderrLine: {'line': b'      |           \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.076873] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:403:3:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::Publisher<MessageT, AllocatorT>::publish(rclcpp::LoanedMessage<typename rclcpp::TypeAdapter<MessageT>::ros_message_type, AllocatorT>&&) [with MessageT = std_msgs::msg::String_<std::allocator<void> >; AllocatorT = std::allocator<void>; typename rclcpp::TypeAdapter<MessageT>::ros_message_type = std_msgs::msg::String_<std::allocator<void> >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.077066] (sfuise) StderrLine: {'line': b'  403 |   \x1b[01;36m\x1b[Kpublish\x1b[m\x1b[K(rclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg)\n'}
[7.077218] (sfuise) StderrLine: {'line': b'      |   \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.077369] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/publisher.hpp:403:64:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kisas_msgs::msg::Anchorlist_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::LoanedMessage<std_msgs::msg::String_<std::allocator<void> >, std::allocator<void> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.077531] (sfuise) StderrLine: {'line': b'  403 | (\x1b[01;36m\x1b[Krclcpp::LoanedMessage<ROSMessageType, AllocatorT> && loaned_msg\x1b[m\x1b[K)\n'}
[7.077691] (sfuise) StderrLine: {'line': b'      |  \x1b[01;36m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.077850] (sfuise) StderrLine: {'line': b'\n'}
[7.136127] (-) TimerEvent: {}
[7.236542] (-) TimerEvent: {}
[7.337088] (-) TimerEvent: {}
[7.437526] (-) TimerEvent: {}
[7.538177] (-) TimerEvent: {}
[7.638762] (-) TimerEvent: {}
[7.739286] (-) TimerEvent: {}
[7.780582] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In constructor \xe2\x80\x98\x1b[01m\x1b[KSplineFusion::SplineFusion(std::shared_ptr<rclcpp::Node>)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.780989] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:26:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_anchor_ini\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_anchor_ini_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.781206] (sfuise) StderrLine: {'line': b'   26 |         \x1b[01;31m\x1b[Kif_anchor_ini\x1b[m\x1b[K = false;  // \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe9\x94\x9a\xe7\x82\xb9\xe6\xa0\x87\xe5\xbf\x97\n'}
[7.781359] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.781502] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kif_anchor_ini_\x1b[m\x1b[K\n'}
[7.792925] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:27:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kaverage_runtime\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kaverage_runtime_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.793279] (sfuise) StderrLine: {'line': b'   27 |         \x1b[01;31m\x1b[Kaverage_runtime\x1b[m\x1b[K = 0;  // \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe5\xb9\xb3\xe5\x9d\x87\xe8\xbf\x90\xe8\xa1\x8c\xe6\x97\xb6\xe9\x97\xb4\n'}
[7.793429] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.793587] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kaverage_runtime_\x1b[m\x1b[K\n'}
[7.806333] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:28:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kwindow_count\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kwindow_count_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.806702] (sfuise) StderrLine: {'line': b'   28 |         \x1b[01;31m\x1b[Kwindow_count\x1b[m\x1b[K = 0;  // \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe7\xaa\x97\xe5\x8f\xa3\xe8\xae\xa1\xe6\x95\xb0\n'}
[7.806858] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.807032] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kwindow_count_\x1b[m\x1b[K\n'}
[7.816721] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:29:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksolver_flag\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ksolver_flag_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.817148] (sfuise) StderrLine: {'line': b'   29 |         \x1b[01;31m\x1b[Ksolver_flag\x1b[m\x1b[K = INITIAL;  // \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe6\xb1\x82\xe8\xa7\xa3\xe5\x99\xa8\xe6\xa0\x87\xe5\xbf\x97\n'}
[7.817331] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.817495] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Ksolver_flag_\x1b[m\x1b[K\n'}
[7.829848] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:29:23:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KINITIAL\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[7.830226] (sfuise) StderrLine: {'line': b'   29 |         solver_flag = \x1b[01;31m\x1b[KINITIAL\x1b[m\x1b[K;  // \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe6\xb1\x82\xe8\xa7\xa3\xe5\x99\xa8\xe6\xa0\x87\xe5\xbf\x97\n'}
[7.830398] (sfuise) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.839449] (-) TimerEvent: {}
[7.842468] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:33:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksub_imu\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ksub_imu_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.842793] (sfuise) StderrLine: {'line': b'   33 |         \x1b[01;31m\x1b[Ksub_imu\x1b[m\x1b[K = node->create_subscription<sensor_msgs::msg::Imu>(\n'}
[7.842968] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.843363] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Ksub_imu_\x1b[m\x1b[K\n'}
[7.866140] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:36:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksub_anchor\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ksub_anchor_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.866462] (sfuise) StderrLine: {'line': b'   36 |         \x1b[01;31m\x1b[Ksub_anchor\x1b[m\x1b[K = node->create_subscription<isas_msgs::msg::Anchorlist>(\n'}
[7.866561] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[7.866642] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Ksub_anchor_\x1b[m\x1b[K\n'}
[7.881107] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:40:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_tdoa\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_tdoa_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.881390] (sfuise) StderrLine: {'line': b'   40 |         if (\x1b[01;31m\x1b[Kif_tdoa\x1b[m\x1b[K) {\n'}
[7.881485] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.881564] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kif_tdoa_\x1b[m\x1b[K\n'}
[7.892085] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:41:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksub_uwb\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ksub_uwb_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.892323] (sfuise) StderrLine: {'line': b'   41 |             \x1b[01;31m\x1b[Ksub_uwb\x1b[m\x1b[K = node->create_subscription<cf_msgs::msg::Tdoa>(\n'}
[7.892433] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.892510] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Ksub_uwb_\x1b[m\x1b[K\n'}
[7.906801] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:44:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksub_uwb\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ksub_uwb_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.907107] (sfuise) StderrLine: {'line': b'   44 |             \x1b[01;31m\x1b[Ksub_uwb\x1b[m\x1b[K = node->create_subscription<cf_msgs::msg::Toa>(\n'}
[7.907199] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.907291] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Ksub_uwb_\x1b[m\x1b[K\n'}
[7.907363] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:44:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KToa\x1b[m\x1b[K\xe2\x80\x99 is not a member of \xe2\x80\x98\x1b[01m\x1b[Kcf_msgs::msg\x1b[m\x1b[K\xe2\x80\x99; did you mean \xe2\x80\x98\x1b[01m\x1b[KTdoa\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.907440] (sfuise) StderrLine: {'line': b'   44 |             sub_uwb = node->create_subscription<cf_msgs::msg::\x1b[01;31m\x1b[KToa\x1b[m\x1b[K>(\n'}
[7.907509] (sfuise) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[7.907577] (sfuise) StderrLine: {'line': b'      |                                                               \x1b[32m\x1b[KTdoa\x1b[m\x1b[K\n'}
[7.909672] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:44:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno matching function for call to \xe2\x80\x98\x1b[01m\x1b[Krclcpp::Node::create_subscription<<expression error> >(const char [28], rclcpp::QoS, std::_Bind_helper<false, void (SplineFusion::*)(std::shared_ptr<isas_msgs::msg::RTLSStick_<std::allocator<void> > >), SplineFusion*, const std::_Placeholder<1>&>::type)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.909917] (sfuise) StderrLine: {'line': b'   44 |             sub_uwb = \x1b[01;31m\x1b[Knode->create_subscription<cf_msgs::msg::Toa>(\x1b[m\x1b[K\n'}
[7.910018] (sfuise) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[7.910093] (sfuise) StderrLine: {'line': b'   45 | \x1b[01;31m\x1b[K                "/EstimationInterface/toa_ds", rclcpp::QoS(1000), std::bind(&SplineFusion::getToaCallback, this, std::placeholders::_1))\x1b[m\x1b[K;\n'}
[7.910167] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.910233] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321\x1b[m\x1b[K,\n'}
[7.910301] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28\x1b[m\x1b[K,\n'}
[7.910368] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22\x1b[m\x1b[K,\n'}
[7.910433] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[7.910497] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:1\x1b[m\x1b[K:\n'}
[7.910563] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:92:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[7.910646] (sfuise) StderrLine: {'line': b'   92 | \x1b[01;36m\x1b[KNode\x1b[m\x1b[K::create_subscription(\n'}
[7.910713] (sfuise) StderrLine: {'line': b'      | \x1b[01;36m\x1b[K^~~~\x1b[m\x1b[K\n'}
[7.910780] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:92:1:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[7.910850] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:44:67:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[7.910933] (sfuise) StderrLine: {'line': b'   44 |             sub_uwb = \x1b[01;31m\x1b[Knode->create_subscription<cf_msgs::msg::Toa>(\x1b[m\x1b[K\n'}
[7.911003] (sfuise) StderrLine: {'line': b'      |                       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^\x1b[m\x1b[K\n'}
[7.911069] (sfuise) StderrLine: {'line': b'   45 | \x1b[01;31m\x1b[K                "/EstimationInterface/toa_ds", rclcpp::QoS(1000), std::bind(&SplineFusion::getToaCallback, this, std::placeholders::_1))\x1b[m\x1b[K;\n'}
[7.911134] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.923496] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:49:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kpub_knots_active\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kpub_knots_active_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.923778] (sfuise) StderrLine: {'line': b'   49 |         \x1b[01;31m\x1b[Kpub_knots_active\x1b[m\x1b[K = node->create_publisher<sensor_msgs::msg::PointCloud>(\n'}
[7.923876] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.923983] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kpub_knots_active_\x1b[m\x1b[K\n'}
[7.937351] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:52:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kpub_knots_inactive\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kpub_knots_inactive_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.937682] (sfuise) StderrLine: {'line': b'   52 |         \x1b[01;31m\x1b[Kpub_knots_inactive\x1b[m\x1b[K = node->create_publisher<sensor_msgs::msg::PointCloud>(\n'}
[7.937795] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.937891] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kpub_knots_inactive_\x1b[m\x1b[K\n'}
[7.939584] (-) TimerEvent: {}
[7.948586] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:55:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kpub_calib\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kpub_calib_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.948866] (sfuise) StderrLine: {'line': b'   55 |         \x1b[01;31m\x1b[Kpub_calib\x1b[m\x1b[K = node->create_publisher<sfuise_msgs::msg::Calib>(\n'}
[7.948994] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[7.949097] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kpub_calib_\x1b[m\x1b[K\n'}
[7.959585] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:58:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kpub_est\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kpub_est_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.959820] (sfuise) StderrLine: {'line': b'   58 |         \x1b[01;31m\x1b[Kpub_est\x1b[m\x1b[K = node->create_publisher<sfuise_msgs::msg::Estimate>(\n'}
[7.959932] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[7.960020] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kpub_est_\x1b[m\x1b[K\n'}
[7.970943] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:61:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kpub_start_time\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kpub_start_time_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.971244] (sfuise) StderrLine: {'line': b'   61 |         \x1b[01;31m\x1b[Kpub_start_time\x1b[m\x1b[K = node->create_publisher<std_msgs::msg::Int64>(\n'}
[7.971342] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.971425] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kpub_start_time_\x1b[m\x1b[K\n'}
[7.982955] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineFusion::run()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[7.983226] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:68:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Knode_\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kmode_t\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.983321] (sfuise) StderrLine: {'line': b'   68 |         rclcpp::Time t_window_start = \x1b[01;31m\x1b[Knode_\x1b[m\x1b[K->get_clock()->now();  // \xe8\x8e\xb7\xe5\x8f\x96\xe5\xbd\x93\xe5\x89\x8d\xe6\x97\xb6\xe9\x97\xb4\n'}
[7.983397] (sfuise) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[7.983471] (sfuise) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[Kmode_t\x1b[m\x1b[K\n'}
[7.995117] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:75:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kaverage_runtime\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kaverage_runtime_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[7.995394] (sfuise) StderrLine: {'line': b'   75 |             \x1b[01;31m\x1b[Kaverage_runtime\x1b[m\x1b[K = (t_consum + double(num_window) * average_runtime) / double(num_window + 1);  // \xe6\x9b\xb4\xe6\x96\xb0\xe5\xb9\xb3\xe5\x9d\x87\xe8\xbf\x90\xe8\xa1\x8c\xe6\x97\xb6\xe9\x97\xb4\n'}
[7.995485] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[7.995559] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kaverage_runtime_\x1b[m\x1b[K\n'}
[8.006804] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:78:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kwindow_count\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kwindow_count_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.007128] (sfuise) StderrLine: {'line': b'   78 |             if ((int)\x1b[01;31m\x1b[Kwindow_count\x1b[m\x1b[K <= n_window_calib) {  // \xe5\xa6\x82\xe6\x9e\x9c\xe7\xaa\x97\xe5\x8f\xa3\xe8\xae\xa1\xe6\x95\xb0\xe5\xb0\x8f\xe4\xba\x8e\xe7\xad\x89\xe4\xba\x8e\xe6\xa0\xa1\xe5\x87\x86\xe7\xaa\x97\xe5\x8f\xa3\xe6\x95\xb0\n'}
[8.007228] (sfuise) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.007329] (sfuise) StderrLine: {'line': b'      |                      \x1b[32m\x1b[Kwindow_count_\x1b[m\x1b[K\n'}
[8.018453] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:78:38:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kn_window_calib\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kn_window_calib_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.018745] (sfuise) StderrLine: {'line': b'   78 |             if ((int)window_count <= \x1b[01;31m\x1b[Kn_window_calib\x1b[m\x1b[K) {  // \xe5\xa6\x82\xe6\x9e\x9c\xe7\xaa\x97\xe5\x8f\xa3\xe8\xae\xa1\xe6\x95\xb0\xe5\xb0\x8f\xe4\xba\x8e\xe7\xad\x89\xe4\xba\x8e\xe6\xa0\xa1\xe5\x87\x86\xe7\xaa\x97\xe5\x8f\xa3\xe6\x95\xb0\n'}
[8.018840] (sfuise) StderrLine: {'line': b'      |                                      \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.018957] (sfuise) StderrLine: {'line': b'      |                                      \x1b[32m\x1b[Kn_window_calib_\x1b[m\x1b[K\n'}
[8.030077] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:81:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcalib_param\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalib_param_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.030340] (sfuise) StderrLine: {'line': b'   81 |                 calib_msg.q_nav_uwb.w = \x1b[01;31m\x1b[Kcalib_param\x1b[m\x1b[K.q_nav_uwb.w();\n'}
[8.030437] (sfuise) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.030519] (sfuise) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[Kcalib_param_\x1b[m\x1b[K\n'}
[8.039801] (-) TimerEvent: {}
[8.042357] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:98:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.042611] (sfuise) StderrLine: {'line': b'   98 |             if (\x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K.numKnots() >= (size_t)window_size) {  // \xe5\xa6\x82\xe6\x9e\x9c\xe6\xa0\xb7\xe6\x9d\xa1\xe8\x8a\x82\xe7\x82\xb9\xe6\x95\xb0\xe8\xbe\xbe\xe5\x88\xb0\xe7\xaa\x97\xe5\x8f\xa3\xe5\xa4\xa7\xe5\xb0\x8f\n'}
[8.042708] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.042791] (sfuise) StderrLine: {'line': b'      |                 \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[8.053619] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:98:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kwindow_size\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kwindow_size_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.053961] (sfuise) StderrLine: {'line': b'   98 |             if (spline_local.numKnots() >= (size_t)\x1b[01;31m\x1b[Kwindow_size\x1b[m\x1b[K) {  // \xe5\xa6\x82\xe6\x9e\x9c\xe6\xa0\xb7\xe6\x9d\xa1\xe8\x8a\x82\xe7\x82\xb9\xe6\x95\xb0\xe8\xbe\xbe\xe5\x88\xb0\xe7\xaa\x97\xe5\x8f\xa3\xe5\xa4\xa7\xe5\xb0\x8f\n'}
[8.054067] (sfuise) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.054154] (sfuise) StderrLine: {'line': b'      |                                                    \x1b[32m\x1b[Kwindow_size_\x1b[m\x1b[K\n'}
[8.064626] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:99:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kwindow_count\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kwindow_count_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.064929] (sfuise) StderrLine: {'line': b'   99 |                 \x1b[01;31m\x1b[Kwindow_count\x1b[m\x1b[K++;  // \xe5\xa2\x9e\xe5\x8a\xa0\xe7\xaa\x97\xe5\x8f\xa3\xe8\xae\xa1\xe6\x95\xb0\n'}
[8.065034] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.065113] (sfuise) StderrLine: {'line': b'      |                 \x1b[32m\x1b[Kwindow_count_\x1b[m\x1b[K\n'}
[8.076285] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:100:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksolver_flag\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ksolver_flag_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.076538] (sfuise) StderrLine: {'line': b'  100 |                 if (\x1b[01;31m\x1b[Ksolver_flag\x1b[m\x1b[K == INITIAL) {  // \xe5\xa6\x82\xe6\x9e\x9c\xe6\xb1\x82\xe8\xa7\xa3\xe5\x99\xa8\xe6\xa0\x87\xe5\xbf\x97\xe4\xb8\xba\xe5\x88\x9d\xe5\xa7\x8b\xe7\x8a\xb6\xe6\x80\x81\n'}
[8.076629] (sfuise) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.076705] (sfuise) StderrLine: {'line': b'      |                     \x1b[32m\x1b[Ksolver_flag_\x1b[m\x1b[K\n'}
[8.089816] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:100:36:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KINITIAL\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.090108] (sfuise) StderrLine: {'line': b'  100 |                 if (solver_flag == \x1b[01;31m\x1b[KINITIAL\x1b[m\x1b[K) {  // \xe5\xa6\x82\xe6\x9e\x9c\xe6\xb1\x82\xe8\xa7\xa3\xe5\x99\xa8\xe6\xa0\x87\xe5\xbf\x97\xe4\xb8\xba\xe5\x88\x9d\xe5\xa7\x8b\xe7\x8a\xb6\xe6\x80\x81\n'}
[8.090203] (sfuise) StderrLine: {'line': b'      |                                    \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.104560] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:101:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFULLSIZE\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.104865] (sfuise) StderrLine: {'line': b'  101 |                     solver_flag = \x1b[01;31m\x1b[KFULLSIZE\x1b[m\x1b[K;  // \xe8\xae\xbe\xe7\xbd\xae\xe4\xb8\xba\xe5\x85\xa8\xe5\xb0\xba\xe5\xaf\xb8\xe7\x8a\xb6\xe6\x80\x81\n'}
[8.104984] (sfuise) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.116123] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:106:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.116413] (sfuise) StderrLine: {'line': b'  106 |             \x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K.getSplineMsg(spline_msg);  // \xe8\x8e\xb7\xe5\x8f\x96\xe6\xa0\xb7\xe6\x9d\xa1\xe6\xb6\x88\xe6\x81\xaf\n'}
[8.116505] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.116580] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[8.127852] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:110:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksolver_flag\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ksolver_flag_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.128116] (sfuise) StderrLine: {'line': b'  110 |             est_msg.if_full_window.data = (\x1b[01;31m\x1b[Ksolver_flag\x1b[m\x1b[K != INITIAL);  // \xe8\xae\xbe\xe7\xbd\xae\xe6\x98\xaf\xe5\x90\xa6\xe4\xb8\xba\xe5\x85\xa8\xe7\xaa\x97\xe5\x8f\xa3\n'}
[8.128214] (sfuise) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.128290] (sfuise) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Ksolver_flag_\x1b[m\x1b[K\n'}
[8.140068] (-) TimerEvent: {}
[8.141870] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:110:59:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KINITIAL\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.142140] (sfuise) StderrLine: {'line': b'  110 |             est_msg.if_full_window.data = (solver_flag != \x1b[01;31m\x1b[KINITIAL\x1b[m\x1b[K);  // \xe8\xae\xbe\xe7\xbd\xae\xe6\x98\xaf\xe5\x90\xa6\xe4\xb8\xba\xe5\x85\xa8\xe7\xaa\x97\xe5\x8f\xa3\n'}
[8.142240] (sfuise) StderrLine: {'line': b'      |                                                           \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.157269] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:116:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KFULLSIZE\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.157545] (sfuise) StderrLine: {'line': b'  116 |             if (solver_flag == \x1b[01;31m\x1b[KFULLSIZE\x1b[m\x1b[K) {\n'}
[8.157638] (sfuise) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.168023] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineFusion::readParameters(rclcpp::Node::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.168347] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:182:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.168481] (sfuise) StderrLine: {'line': b'  182 |             \x1b[01;31m\x1b[Kif_uwb_only\x1b[m\x1b[K = true; // \xe5\xa6\x82\xe6\x9e\x9c\xe7\xb3\xbb\xe6\x95\xb0\xe4\xb8\xba0\xef\xbc\x8c\xe5\x88\x99\xe4\xbb\x85\xe4\xbd\xbf\xe7\x94\xa8UWB\n'}
[8.168570] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.168650] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kif_uwb_only_\x1b[m\x1b[K\n'}
[8.178720] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:184:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.178999] (sfuise) StderrLine: {'line': b'  184 |             \x1b[01;31m\x1b[Kif_uwb_only\x1b[m\x1b[K = false; // \xe5\x90\xa6\xe5\x88\x99\xe4\xb8\x8d\xe5\x8f\xaa\xe4\xbd\xbf\xe7\x94\xa8UWB\n'}
[8.179095] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.179170] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kif_uwb_only_\x1b[m\x1b[K\n'}
[8.188416] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:187:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kparam\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kparam_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.188687] (sfuise) StderrLine: {'line': b'  187 |         \x1b[01;31m\x1b[Kparam\x1b[m\x1b[K.if_opt_g = true; // \xe8\xae\xbe\xe7\xbd\xae\xe4\xbc\x98\xe5\x8c\x96\xe9\x87\x8d\xe5\x8a\x9b\xe6\xa0\x87\xe5\xbf\x97\n'}
[8.188799] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.188879] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kparam_\x1b[m\x1b[K\n'}
[8.198411] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:190:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmax_iter\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kmax_iter_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.198682] (sfuise) StderrLine: {'line': b'  190 |         \x1b[01;31m\x1b[Kmax_iter\x1b[m\x1b[K = CommonUtils::readParam<int>(node, "max_iter"); // \xe8\xaf\xbb\xe5\x8f\x96\xe6\x9c\x80\xe5\xa4\xa7\xe8\xbf\xad\xe4\xbb\xa3\xe6\xac\xa1\xe6\x95\xb0\n'}
[8.198780] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.198860] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kmax_iter_\x1b[m\x1b[K\n'}
[8.208605] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:191:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdt_ns\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kdt_ns_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.208836] (sfuise) StderrLine: {'line': b'  191 |         \x1b[01;31m\x1b[Kdt_ns\x1b[m\x1b[K = 1e9 / CommonUtils::readParam<int>(node, "control_point_fps"); // \xe8\xae\xa1\xe7\xae\x97\xe6\x97\xb6\xe9\x97\xb4\xe9\x97\xb4\xe9\x9a\x94\n'}
[8.208939] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.209016] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kdt_ns_\x1b[m\x1b[K\n'}
[8.218486] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:192:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_tdoa\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_tdoa_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.218779] (sfuise) StderrLine: {'line': b'  192 |         \x1b[01;31m\x1b[Kif_tdoa\x1b[m\x1b[K = CommonUtils::readParam<bool>(node, "if_tdoa"); // \xe8\xaf\xbb\xe5\x8f\x96\xe6\x98\xaf\xe5\x90\xa6\xe4\xbd\xbf\xe7\x94\xa8TDOA\xe6\xa0\x87\xe5\xbf\x97\n'}
[8.218875] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.219000] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kif_tdoa_\x1b[m\x1b[K\n'}
[8.229711] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:193:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbag_start_time\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kbag_start_time_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.229979] (sfuise) StderrLine: {'line': b'  193 |         \x1b[01;31m\x1b[Kbag_start_time\x1b[m\x1b[K = 0; // \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe8\xa1\x8c\xe6\x9d\x8e\xe5\xbc\x80\xe5\xa7\x8b\xe6\x97\xb6\xe9\x97\xb4\n'}
[8.230075] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.230151] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kbag_start_time_\x1b[m\x1b[K\n'}
[8.240177] (-) TimerEvent: {}
[8.240615] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:194:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kn_window_calib\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kn_window_calib_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.240844] (sfuise) StderrLine: {'line': b'  194 |         \x1b[01;31m\x1b[Kn_window_calib\x1b[m\x1b[K = CommonUtils::readParam<int>(node, "n_window_calib"); // \xe8\xaf\xbb\xe5\x8f\x96\xe6\xa0\xa1\xe5\x87\x86\xe7\xaa\x97\xe5\x8f\xa3\xe6\x95\xb0\n'}
[8.240969] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.241044] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kn_window_calib_\x1b[m\x1b[K\n'}
[8.250819] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:195:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kwindow_size\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kwindow_size_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.251123] (sfuise) StderrLine: {'line': b'  195 |         \x1b[01;31m\x1b[Kwindow_size\x1b[m\x1b[K = CommonUtils::readParam<int>(node, "window_size"); // \xe8\xaf\xbb\xe5\x8f\x96\xe7\xaa\x97\xe5\x8f\xa3\xe5\xa4\xa7\xe5\xb0\x8f\n'}
[8.251222] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.251304] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kwindow_size_\x1b[m\x1b[K\n'}
[8.264000] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:232:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcalib_param\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalib_param_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.264315] (sfuise) StderrLine: {'line': b'  232 |         \x1b[01;31m\x1b[Kcalib_param\x1b[m\x1b[K.offset = Eigen::Vector3d(v_offset.at(0), v_offset.at(1), v_offset.at(2)); // \xe8\xae\xbe\xe7\xbd\xae\xe6\xa0\xa1\xe5\x87\x86\xe5\x81\x8f\xe7\xa7\xbb\n'}
[8.264444] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.264530] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kcalib_param_\x1b[m\x1b[K\n'}
[8.276269] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:235:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kv_toa_offset\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kv_toa_offset_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.276586] (sfuise) StderrLine: {'line': b'  235 |             \x1b[01;31m\x1b[Kv_toa_offset\x1b[m\x1b[K = CommonUtils::readParam<std::vector<double>>(node, "toa_offset"); // \xe8\xaf\xbb\xe5\x8f\x96TOA\xe5\x81\x8f\xe7\xa7\xbb\xe9\x87\x8f\n'}
[8.276685] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.276764] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kv_toa_offset_\x1b[m\x1b[K\n'}
[8.291987] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineFusion::getImuCallback(sensor_msgs::msg::Imu_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.292267] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:246:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kimu_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kimu_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.292358] (sfuise) StderrLine: {'line': b'  246 |         \x1b[01;31m\x1b[Kimu_buff\x1b[m\x1b[K.push_back(imu); // \xe5\xb0\x86IMU\xe6\x95\xb0\xe6\x8d\xae\xe6\xb7\xbb\xe5\x8a\xa0\xe5\x88\xb0\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\n'}
[8.292434] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.292506] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kimu_buff_\x1b[m\x1b[K\n'}
[8.295431] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineFusion::getTdoaCallback(cf_msgs::msg::Tdoa_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.295724] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:252:54:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kusing element_type = struct cf_msgs::msg::Tdoa_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstruct cf_msgs::msg::Tdoa_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} has no member named \xe2\x80\x98\x1b[01m\x1b[KidA\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.295880] (sfuise) StderrLine: {'line': b'  252 |         TDOAData uwb(msg->header.stamp.nanosec, msg->\x1b[01;31m\x1b[KidA\x1b[m\x1b[K, msg->idB, msg->data); // \xe5\x88\x9b\xe5\xbb\xbaTDOA\xe6\x95\xb0\xe6\x8d\xae\xe5\xaf\xb9\xe8\xb1\xa1\n'}
[8.296041] (sfuise) StderrLine: {'line': b'      |                                                      \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.296172] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:252:64:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kusing element_type = struct cf_msgs::msg::Tdoa_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstruct cf_msgs::msg::Tdoa_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} has no member named \xe2\x80\x98\x1b[01m\x1b[KidB\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.296322] (sfuise) StderrLine: {'line': b'  252 |         TDOAData uwb(msg->header.stamp.nanosec, msg->idA, msg->\x1b[01;31m\x1b[KidB\x1b[m\x1b[K, msg->data); // \xe5\x88\x9b\xe5\xbb\xbaTDOA\xe6\x95\xb0\xe6\x8d\xae\xe5\xaf\xb9\xe8\xb1\xa1\n'}
[8.296459] (sfuise) StderrLine: {'line': b'      |                                                                \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[8.306065] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:253:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktdoa_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktdoa_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.306358] (sfuise) StderrLine: {'line': b'  253 |         \x1b[01;31m\x1b[Ktdoa_buff\x1b[m\x1b[K.push_back(uwb); // \xe5\xb0\x86TDOA\xe6\x95\xb0\xe6\x8d\xae\xe6\xb7\xbb\xe5\x8a\xa0\xe5\x88\xb0\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\n'}
[8.306512] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.306653] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Ktdoa_buff_\x1b[m\x1b[K\n'}
[8.320386] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineFusion::getToaCallback(isas_msgs::msg::RTLSStick_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.320712] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:263:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktoa_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktoa_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.320857] (sfuise) StderrLine: {'line': b'  263 |             \x1b[01;31m\x1b[Ktoa_buff\x1b[m\x1b[K.push_back(uwb); // \xe5\xb0\x86TOA\xe6\x95\xb0\xe6\x8d\xae\xe6\xb7\xbb\xe5\x8a\xa0\xe5\x88\xb0\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\n'}
[8.321330] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.321471] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Ktoa_buff_\x1b[m\x1b[K\n'}
[8.335128] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineFusion::getAnchorCallback(isas_msgs::msg::Anchorlist_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.335354] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:270:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_anchor_ini\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_anchor_ini_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.335447] (sfuise) StderrLine: {'line': b'  270 |         if (\x1b[01;31m\x1b[Kif_anchor_ini\x1b[m\x1b[K) return; // \xe5\xa6\x82\xe6\x9e\x9c\xe9\x94\x9a\xe7\x82\xb9\xe5\xb7\xb2\xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xef\xbc\x8c\xe8\xbf\x94\xe5\x9b\x9e\n'}
[8.335518] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.335588] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kif_anchor_ini_\x1b[m\x1b[K\n'}
[8.340378] (-) TimerEvent: {}
[8.344289] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:272:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kparam\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kparam_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.344502] (sfuise) StderrLine: {'line': b'  272 |             \x1b[01;31m\x1b[Kparam\x1b[m\x1b[K.anchor_list[anchor.id] = Eigen::Vector3d(anchor.position.x, anchor.position.y, anchor.position.z); // \xe6\xb7\xbb\xe5\x8a\xa0\xe9\x94\x9a\xe7\x82\xb9\xe5\x88\xb0\xe5\x88\x97\xe8\xa1\xa8\n'}
[8.344587] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.344656] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kparam_\x1b[m\x1b[K\n'}
[8.354131] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:274:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_anchor_ini\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_anchor_ini_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.354338] (sfuise) StderrLine: {'line': b'  274 |         \x1b[01;31m\x1b[Kif_anchor_ini\x1b[m\x1b[K = true; // \xe8\xae\xbe\xe7\xbd\xae\xe9\x94\x9a\xe7\x82\xb9\xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe6\xa0\x87\xe5\xbf\x97\n'}
[8.354421] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.354491] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kif_anchor_ini_\x1b[m\x1b[K\n'}
[8.362503] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:275:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_tdoa\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_tdoa_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.362692] (sfuise) StderrLine: {'line': b'  275 |         if (!\x1b[01;31m\x1b[Kif_tdoa\x1b[m\x1b[K) { // \xe5\xa6\x82\xe6\x9e\x9c\xe4\xb8\x8d\xe4\xbd\xbf\xe7\x94\xa8TDOA\n'}
[8.362771] (sfuise) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.362840] (sfuise) StderrLine: {'line': b'      |              \x1b[32m\x1b[Kif_tdoa_\x1b[m\x1b[K\n'}
[8.370176] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:277:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kparam\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kparam_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.370402] (sfuise) StderrLine: {'line': b'  277 |             for (auto it = \x1b[01;31m\x1b[Kparam\x1b[m\x1b[K.anchor_list.begin(); it != param.anchor_list.end(); it++) { // \xe9\x81\x8d\xe5\x8e\x86\xe9\x94\x9a\xe7\x82\xb9\xe5\x88\x97\xe8\xa1\xa8\n'}
[8.370500] (sfuise) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.370572] (sfuise) StderrLine: {'line': b'      |                            \x1b[32m\x1b[Kparam_\x1b[m\x1b[K\n'}
[8.379466] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:278:47:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kv_toa_offset\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kv_toa_offset_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.379672] (sfuise) StderrLine: {'line': b'  278 |                 param.toa_offset[it->first] = \x1b[01;31m\x1b[Kv_toa_offset\x1b[m\x1b[K[i]; // \xe8\xae\xbe\xe7\xbd\xaeTOA\xe5\x81\x8f\xe7\xa7\xbb\n'}
[8.379753] (sfuise) StderrLine: {'line': b'      |                                               \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.379822] (sfuise) StderrLine: {'line': b'      |                                               \x1b[32m\x1b[Kv_toa_offset_\x1b[m\x1b[K\n'}
[8.389032] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineFusion::updateMeasurements(Eigen::aligned_deque<_KnotT>&, Eigen::aligned_deque<_KnotT>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.389228] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:288:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.389312] (sfuise) StderrLine: {'line': b'  288 |         int64_t t_window_l = \x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K.minTimeNs(); // \xe8\x8e\xb7\xe5\x8f\x96\xe7\xaa\x97\xe5\x8f\xa3\xe5\xb7\xa6\xe8\xbe\xb9\xe7\x95\x8c\n'}
[8.389383] (sfuise) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.389448] (sfuise) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[8.397797] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool SplineFusion::initialization()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.397996] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:315:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kimu_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kimu_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.398078] (sfuise) StderrLine: {'line': b'  315 |             if (!\x1b[01;31m\x1b[Kimu_buff\x1b[m\x1b[K.empty()) min_time = imu_buff.back().time_ns; // \xe8\x8e\xb7\xe5\x8f\x96IMU\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\xe7\x9a\x84\xe6\x97\xb6\xe9\x97\xb4\n'}
[8.398145] (sfuise) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.398210] (sfuise) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kimu_buff_\x1b[m\x1b[K\n'}
[8.406140] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:316:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktoa_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktoa_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.406349] (sfuise) StderrLine: {'line': b'  316 |             if (!\x1b[01;31m\x1b[Ktoa_buff\x1b[m\x1b[K.empty()) min_time = std::min(toa_buff.back().time_ns, min_time); // \xe8\x8e\xb7\xe5\x8f\x96TOA\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\xe7\x9a\x84\xe6\x97\xb6\xe9\x97\xb4\n'}
[8.406426] (sfuise) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.406490] (sfuise) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Ktoa_buff_\x1b[m\x1b[K\n'}
[8.414461] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:317:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktdoa_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktdoa_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.414659] (sfuise) StderrLine: {'line': b'  317 |             if (!\x1b[01;31m\x1b[Ktdoa_buff\x1b[m\x1b[K.empty()) min_time = std::min(tdoa_buff.back().time_ns, min_time); // \xe8\x8e\xb7\xe5\x8f\x96TDOA\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\xe7\x9a\x84\xe6\x97\xb6\xe9\x97\xb4\n'}
[8.414737] (sfuise) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.414802] (sfuise) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Ktdoa_buff_\x1b[m\x1b[K\n'}
[8.422683] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:318:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.422872] (sfuise) StderrLine: {'line': b'  318 |             if (min_time > \x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K.nextMaxTimeNs()) { // \xe5\xa6\x82\xe6\x9e\x9c\xe6\x9c\x80\xe5\xb0\x8f\xe6\x97\xb6\xe9\x97\xb4\xe5\xa4\xa7\xe4\xba\x8e\xe6\xa0\xb7\xe6\x9d\xa1\xe7\x9a\x84\xe6\x9c\x80\xe5\xa4\xa7\xe6\x97\xb6\xe9\x97\xb4\n'}
[8.422968] (sfuise) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.423038] (sfuise) StderrLine: {'line': b'      |                            \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[8.431450] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:323:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.431651] (sfuise) StderrLine: {'line': b'  323 |                 if (!\x1b[01;31m\x1b[Kif_uwb_only\x1b[m\x1b[K) { // \xe5\xa6\x82\xe6\x9e\x9c\xe4\xb8\x8d\xe5\x8f\xaa\xe4\xbd\xbf\xe7\x94\xa8UWB\n'}
[8.431743] (sfuise) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.431808] (sfuise) StderrLine: {'line': b'      |                      \x1b[32m\x1b[Kif_uwb_only_\x1b[m\x1b[K\n'}
[8.440016] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:325:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klast_imu_t_ns\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Klast_imu_t_ns_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.440206] (sfuise) StderrLine: {'line': b'  325 |                         \x1b[01;31m\x1b[Klast_imu_t_ns\x1b[m\x1b[K = bag_start_time; // \xe8\xae\xbe\xe7\xbd\xae\xe6\x9c\x80\xe5\x90\x8eIMU\xe6\x97\xb6\xe9\x97\xb4\xe4\xb8\xba\xe8\xa1\x8c\xe6\x9d\x8e\xe5\xbc\x80\xe5\xa7\x8b\xe6\x97\xb6\xe9\x97\xb4\n'}
[8.440283] (sfuise) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.440349] (sfuise) StderrLine: {'line': b'      |                         \x1b[32m\x1b[Klast_imu_t_ns_\x1b[m\x1b[K\n'}
[8.440409] (-) TimerEvent: {}
[8.448621] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:325:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbag_start_time\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kbag_start_time_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.448807] (sfuise) StderrLine: {'line': b'  325 |                         last_imu_t_ns = \x1b[01;31m\x1b[Kbag_start_time\x1b[m\x1b[K; // \xe8\xae\xbe\xe7\xbd\xae\xe6\x9c\x80\xe5\x90\x8eIMU\xe6\x97\xb6\xe9\x97\xb4\xe4\xb8\xba\xe8\xa1\x8c\xe6\x9d\x8e\xe5\xbc\x80\xe5\xa7\x8b\xe6\x97\xb6\xe9\x97\xb4\n'}
[8.448913] (sfuise) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.448984] (sfuise) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[Kbag_start_time_\x1b[m\x1b[K\n'}
[8.457215] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:327:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klast_imu_t_ns\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Klast_imu_t_ns_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.457442] (sfuise) StderrLine: {'line': b'  327 |                         \x1b[01;31m\x1b[Klast_imu_t_ns\x1b[m\x1b[K = imu_window.back().time_ns; // \xe8\x8e\xb7\xe5\x8f\x96IMU\xe7\xaa\x97\xe5\x8f\xa3\xe7\x9a\x84\xe6\x9c\x80\xe5\x90\x8e\xe6\x97\xb6\xe9\x97\xb4\n'}
[8.457528] (sfuise) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.457599] (sfuise) StderrLine: {'line': b'      |                         \x1b[32m\x1b[Klast_imu_t_ns_\x1b[m\x1b[K\n'}
[8.466072] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:327:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kimu_window\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kimu_window_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.466267] (sfuise) StderrLine: {'line': b'  327 |                         last_imu_t_ns = \x1b[01;31m\x1b[Kimu_window\x1b[m\x1b[K.back().time_ns; // \xe8\x8e\xb7\xe5\x8f\x96IMU\xe7\xaa\x97\xe5\x8f\xa3\xe7\x9a\x84\xe6\x9c\x80\xe5\x90\x8e\xe6\x97\xb6\xe9\x97\xb4\n'}
[8.466352] (sfuise) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.466421] (sfuise) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[Kimu_window_\x1b[m\x1b[K\n'}
[8.482405] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:329:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Knext_knot_TimeNs\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Knext_knot_time_ns_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.482650] (sfuise) StderrLine: {'line': b'  329 |                     integration(\x1b[01;31m\x1b[Knext_knot_TimeNs\x1b[m\x1b[K, q_ini, pos_ini); // \xe6\x89\xa7\xe8\xa1\x8c\xe7\xa7\xaf\xe5\x88\x86\n'}
[8.482756] (sfuise) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.482832] (sfuise) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Knext_knot_time_ns_\x1b[m\x1b[K\n'}
[8.491347] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:331:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_tdoa\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_tdoa_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.491543] (sfuise) StderrLine: {'line': b'  331 |                     if (\x1b[01;31m\x1b[Kif_tdoa\x1b[m\x1b[K) { // \xe5\xa6\x82\xe6\x9e\x9c\xe4\xbd\xbf\xe7\x94\xa8TDOA\n'}
[8.491624] (sfuise) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.491691] (sfuise) StderrLine: {'line': b'      |                         \x1b[32m\x1b[Kif_tdoa_\x1b[m\x1b[K\n'}
[8.506212] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:332:55:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Knext_knot_TimeNs\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Knext_knot_time_ns_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.506428] (sfuise) StderrLine: {'line': b'  332 |                         pos_ini = tdoaMultilateration(\x1b[01;31m\x1b[Knext_knot_TimeNs\x1b[m\x1b[K * NS_TO_S); // \xe6\x89\xa7\xe8\xa1\x8cTDOA\xe5\xa4\x9a\xe8\xbe\xb9\xe5\xae\x9a\xe4\xbd\x8d\n'}
[8.506507] (sfuise) StderrLine: {'line': b'      |                                                       \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.506573] (sfuise) StderrLine: {'line': b'      |                                                       \x1b[32m\x1b[Knext_knot_time_ns_\x1b[m\x1b[K\n'}
[8.506635] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:40\x1b[m\x1b[K,\n'}
[8.506698] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[8.507037] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[8.507209] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.507281] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.507345] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.507407] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.507469] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.507529] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.507587] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.507646] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:1\x1b[m\x1b[K:\n'}
[8.507705] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:335:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass SplineFusion\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kget_logger\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.507768] (sfuise) StderrLine: {'line': b'  335 |                         RCLCPP_ERROR(this->\x1b[01;31m\x1b[Kget_logger\x1b[m\x1b[K(), "UWB-only tracking only supported for TDOA data!"); // \xe8\xbe\x93\xe5\x87\xba\xe9\x94\x99\xe8\xaf\xaf\xe4\xbf\xa1\xe6\x81\xaf\n'}
[8.507828] (sfuise) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.507886] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:335:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass SplineFusion\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kget_logger\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.507965] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:335:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[8.508025] (sfuise) StderrLine: {'line': b'  335 |                         \x1b[01;31m\x1b[KRCLCPP_ERROR\x1b[m\x1b[K(this->get_logger(), "UWB-only tracking only supported for TDOA data!"); // \xe8\xbe\x93\xe5\x87\xba\xe9\x94\x99\xe8\xaf\xaf\xe4\xbf\xa1\xe6\x81\xaf\n'}
[8.508083] (sfuise) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.508154] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:335:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[8.508213] (sfuise) StderrLine: {'line': b'  335 |                         \x1b[01;31m\x1b[KRCLCPP_ERROR\x1b[m\x1b[K(this->get_logger(), "UWB-only tracking only supported for TDOA data!"); // \xe8\xbe\x93\xe5\x87\xba\xe9\x94\x99\xe8\xaf\xaf\xe4\xbf\xa1\xe6\x81\xaf\n'}
[8.508273] (sfuise) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.508331] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:335:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[8.508387] (sfuise) StderrLine: {'line': b'  335 |                         \x1b[01;31m\x1b[KRCLCPP_ERROR\x1b[m\x1b[K(this->get_logger(), "UWB-only tracking only supported for TDOA data!"); // \xe8\xbe\x93\xe5\x87\xba\xe9\x94\x99\xe8\xaf\xaf\xe4\xbf\xa1\xe6\x81\xaf\n'}
[8.508443] (sfuise) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.508503] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/logging.hpp:24\x1b[m\x1b[K,\n'}
[8.508558] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:40\x1b[m\x1b[K,\n'}
[8.508612] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[8.508668] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[8.508727] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[8.508782] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[8.508838] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[8.508897] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[8.508969] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[8.509028] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[8.509089] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[8.509156] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:1\x1b[m\x1b[K:\n'}
[8.509218] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:335:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass SplineFusion\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kget_logger\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.509281] (sfuise) StderrLine: {'line': b'  335 |                         RCLCPP_ERROR(this->\x1b[01;31m\x1b[Kget_logger\x1b[m\x1b[K(), "UWB-only tracking only supported for TDOA data!"); // \xe8\xbe\x93\xe5\x87\xba\xe9\x94\x99\xe8\xaf\xaf\xe4\xbf\xa1\xe6\x81\xaf\n'}
[8.509344] (sfuise) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.509403] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:335:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass SplineFusion\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kget_logger\x1b[m\x1b[K\xe2\x80\x99\n'}
[8.509466] (sfuise) StderrLine: {'line': b'  335 |                         RCLCPP_ERROR(this->\x1b[01;31m\x1b[Kget_logger\x1b[m\x1b[K(), "UWB-only tracking only supported for TDOA data!"); // \xe8\xbe\x93\xe5\x87\xba\xe9\x94\x99\xe8\xaf\xaf\xe4\xbf\xa1\xe6\x81\xaf\n'}
[8.509524] (sfuise) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.523990] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:341:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Knext_knot_TimeNs\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Knext_knot_time_ns_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.524223] (sfuise) StderrLine: {'line': b'  341 |                 \x1b[01;31m\x1b[Knext_knot_TimeNs\x1b[m\x1b[K += dt_ns; // \xe6\x9b\xb4\xe6\x96\xb0\xe4\xb8\x8b\xe4\xb8\x80\xe4\xb8\xaa\xe8\x8a\x82\xe7\x82\xb9\xe6\x97\xb6\xe9\x97\xb4\n'}
[8.524310] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.524384] (sfuise) StderrLine: {'line': b'      |                 \x1b[32m\x1b[Knext_knot_time_ns_\x1b[m\x1b[K\n'}
[8.532701] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:341:37:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdt_ns\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kdt_ns_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.532929] (sfuise) StderrLine: {'line': b'  341 |                 next_knot_TimeNs += \x1b[01;31m\x1b[Kdt_ns\x1b[m\x1b[K; // \xe6\x9b\xb4\xe6\x96\xb0\xe4\xb8\x8b\xe4\xb8\x80\xe4\xb8\xaa\xe8\x8a\x82\xe7\x82\xb9\xe6\x97\xb6\xe9\x97\xb4\n'}
[8.533021] (sfuise) StderrLine: {'line': b'      |                                     \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.533096] (sfuise) StderrLine: {'line': b'      |                                     \x1b[32m\x1b[Kdt_ns_\x1b[m\x1b[K\n'}
[8.540612] (-) TimerEvent: {}
[8.542363] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:350:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbag_start_time\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kbag_start_time_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.542561] (sfuise) StderrLine: {'line': b'  350 |                 start_time.data = \x1b[01;31m\x1b[Kbag_start_time\x1b[m\x1b[K; // \xe8\xae\xbe\xe7\xbd\xae\xe5\x90\xaf\xe5\x8a\xa8\xe6\x97\xb6\xe9\x97\xb4\n'}
[8.542644] (sfuise) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.542715] (sfuise) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kbag_start_time_\x1b[m\x1b[K\n'}
[8.551557] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:353:30:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_anchor_ini\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_anchor_ini_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.551746] (sfuise) StderrLine: {'line': b'  353 |             if (param_set && \x1b[01;31m\x1b[Kif_anchor_ini\x1b[m\x1b[K) { // \xe5\xa6\x82\xe6\x9e\x9c\xe5\x8f\x82\xe6\x95\xb0\xe5\xb7\xb2\xe8\xae\xbe\xe7\xbd\xae\xe4\xb8\x94\xe9\x94\x9a\xe7\x82\xb9\xe5\xb7\xb2\xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\n'}
[8.551824] (sfuise) StderrLine: {'line': b'      |                              \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.551893] (sfuise) StderrLine: {'line': b'      |                              \x1b[32m\x1b[Kif_anchor_ini_\x1b[m\x1b[K\n'}
[8.559877] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:354:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.560090] (sfuise) StderrLine: {'line': b'  354 |                 \x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K.init(dt_ns, 0, bag_start_time); // \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe6\xa0\xb7\xe6\x9d\xa1\n'}
[8.560166] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.560232] (sfuise) StderrLine: {'line': b'      |                 \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[8.567321] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:354:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kdt_ns\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kdt_ns_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.567515] (sfuise) StderrLine: {'line': b'  354 |                 spline_local.init(\x1b[01;31m\x1b[Kdt_ns\x1b[m\x1b[K, 0, bag_start_time); // \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe6\xa0\xb7\xe6\x9d\xa1\n'}
[8.567591] (sfuise) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.567670] (sfuise) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kdt_ns_\x1b[m\x1b[K\n'}
[8.576264] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:354:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbag_start_time\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kbag_start_time_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.576477] (sfuise) StderrLine: {'line': b'  354 |                 spline_local.init(dt_ns, 0, \x1b[01;31m\x1b[Kbag_start_time\x1b[m\x1b[K); // \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe6\xa0\xb7\xe6\x9d\xa1\n'}
[8.576560] (sfuise) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.576632] (sfuise) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[Kbag_start_time_\x1b[m\x1b[K\n'}
[8.585494] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:355:22:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.585712] (sfuise) StderrLine: {'line': b'  355 |                 if (!\x1b[01;31m\x1b[Kif_uwb_only\x1b[m\x1b[K) { // \xe5\xa6\x82\xe6\x9e\x9c\xe4\xb8\x8d\xe5\x8f\xaa\xe4\xbd\xbf\xe7\x94\xa8UWB\n'}
[8.585799] (sfuise) StderrLine: {'line': b'      |                      \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.585877] (sfuise) StderrLine: {'line': b'      |                      \x1b[32m\x1b[Kif_uwb_only_\x1b[m\x1b[K\n'}
[8.594193] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:357:36:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kimu_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kimu_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.594380] (sfuise) StderrLine: {'line': b'  357 |                     size_t n_imu = \x1b[01;31m\x1b[Kimu_buff\x1b[m\x1b[K.size(); // \xe8\x8e\xb7\xe5\x8f\x96IMU\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\xe5\xa4\xa7\xe5\xb0\x8f\n'}
[8.594460] (sfuise) StderrLine: {'line': b'      |                                    \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.594526] (sfuise) StderrLine: {'line': b'      |                                    \x1b[32m\x1b[Kimu_buff_\x1b[m\x1b[K\n'}
[8.602636] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:363:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcalib_param\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalib_param_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.602823] (sfuise) StderrLine: {'line': b'  363 |                     \x1b[01;31m\x1b[Kcalib_param\x1b[m\x1b[K.gravity = gravity_ave; // \xe8\xae\xbe\xe7\xbd\xae\xe6\xa0\xa1\xe5\x87\x86\xe9\x87\x8d\xe5\x8a\x9b\n'}
[8.602911] (sfuise) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.602983] (sfuise) StderrLine: {'line': b'      |                     \x1b[32m\x1b[Kcalib_param_\x1b[m\x1b[K\n'}
[8.610798] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:365:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcalib_param\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalib_param_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.611002] (sfuise) StderrLine: {'line': b'  365 |                 \x1b[01;31m\x1b[Kcalib_param\x1b[m\x1b[K.q_nav_uwb = param.q_nav_uwb_init; // \xe8\xae\xbe\xe7\xbd\xae\xe5\xaf\xbc\xe8\x88\xaa\xe5\x9b\x9b\xe5\x85\x83\xe6\x95\xb0\n'}
[8.611081] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.611147] (sfuise) StderrLine: {'line': b'      |                 \x1b[32m\x1b[Kcalib_param_\x1b[m\x1b[K\n'}
[8.618212] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:365:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kparam\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kparam_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.618398] (sfuise) StderrLine: {'line': b'  365 |                 calib_param.q_nav_uwb = \x1b[01;31m\x1b[Kparam\x1b[m\x1b[K.q_nav_uwb_init; // \xe8\xae\xbe\xe7\xbd\xae\xe5\xaf\xbc\xe8\x88\xaa\xe5\x9b\x9b\xe5\x85\x83\xe6\x95\xb0\n'}
[8.618477] (sfuise) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.618543] (sfuise) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[Kparam_\x1b[m\x1b[K\n'}
[8.632721] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:374:21:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Knext_knot_TimeNs\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Knext_knot_time_ns_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.632921] (sfuise) StderrLine: {'line': b'  374 |                     \x1b[01;31m\x1b[Knext_knot_TimeNs\x1b[m\x1b[K += dt_ns; // \xe6\x9b\xb4\xe6\x96\xb0\xe4\xb8\x8b\xe4\xb8\x80\xe4\xb8\xaa\xe8\x8a\x82\xe7\x82\xb9\xe6\x97\xb6\xe9\x97\xb4\n'}
[8.632998] (sfuise) StderrLine: {'line': b'      |                     \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.633059] (sfuise) StderrLine: {'line': b'      |                     \x1b[32m\x1b[Knext_knot_time_ns_\x1b[m\x1b[K\n'}
[8.640809] (-) TimerEvent: {}
[8.641198] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[KEigen::Vector3d SplineFusion::tdoaMultilateration(double) const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.641379] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:390:35:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kparam\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kparam_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.641477] (sfuise) StderrLine: {'line': b'  390 |         Eigen::Vector3d anchor0 = \x1b[01;31m\x1b[Kparam\x1b[m\x1b[K.anchor_list.at(0); // \xe8\x8e\xb7\xe5\x8f\x96\xe7\xac\xac\xe4\xb8\x80\xe4\xb8\xaa\xe9\x94\x9a\xe7\x82\xb9\n'}
[8.641542] (sfuise) StderrLine: {'line': b'      |                                   \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.641603] (sfuise) StderrLine: {'line': b'      |                                   \x1b[32m\x1b[Kparam_\x1b[m\x1b[K\n'}
[8.649215] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:392:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktdoa_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktdoa_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.649396] (sfuise) StderrLine: {'line': b'  392 |         range.push_back(\x1b[01;31m\x1b[Ktdoa_buff\x1b[m\x1b[K.at(idx[0]).data); // \xe6\xb7\xbb\xe5\x8a\xa0\xe7\xac\xac\xe4\xb8\x80\xe4\xb8\xaa\xe8\x8c\x83\xe5\x9b\xb4\n'}
[8.649474] (sfuise) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.649540] (sfuise) StderrLine: {'line': b'      |                         \x1b[32m\x1b[Ktdoa_buff_\x1b[m\x1b[K\n'}
[8.741038] (-) TimerEvent: {}
[8.778843] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:406:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kset_origin\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ksetlogin\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.779126] (sfuise) StderrLine: {'line': b'  406 |         if (!\x1b[01;31m\x1b[Kset_origin\x1b[m\x1b[K) { // \xe5\xa6\x82\xe6\x9e\x9c\xe6\x9c\xaa\xe8\xae\xbe\xe7\xbd\xae\xe5\x8e\x9f\xe7\x82\xb9\n'}
[8.779215] (sfuise) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.779290] (sfuise) StderrLine: {'line': b'      |              \x1b[32m\x1b[Ksetlogin\x1b[m\x1b[K\n'}
[8.789074] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:410:19:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcalib_param\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalib_param_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.789324] (sfuise) StderrLine: {'line': b'  410 |             pos = \x1b[01;31m\x1b[Kcalib_param\x1b[m\x1b[K.q_nav_uwb.inverse() * (pos - calib_param.t_nav_uwb); // \xe8\xae\xa1\xe7\xae\x97\xe6\x9c\x80\xe7\xbb\x88\xe4\xbd\x8d\xe7\xbd\xae\n'}
[8.789415] (sfuise) StderrLine: {'line': b'      |                   \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.789490] (sfuise) StderrLine: {'line': b'      |                   \x1b[32m\x1b[Kcalib_param_\x1b[m\x1b[K\n'}
[8.804621] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineFusion::findClosestNWithOrderedID(double, int, size_t*) const\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.804955] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:418:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktdoa_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktdoa_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.805059] (sfuise) StderrLine: {'line': b'  418 |         for (auto it = \x1b[01;31m\x1b[Ktdoa_buff\x1b[m\x1b[K.begin(); it != tdoa_buff.end(); it++) { // \xe9\x81\x8d\xe5\x8e\x86TDOA\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\n'}
[8.805139] (sfuise) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.805215] (sfuise) StderrLine: {'line': b'      |                        \x1b[32m\x1b[Ktdoa_buff_\x1b[m\x1b[K\n'}
[8.824892] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool SplineFusion::optimization()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[8.825219] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:443:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.825320] (sfuise) StderrLine: {'line': b'  443 |         if (\x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K.numKnots() < 2) return false; // \xe5\xa6\x82\xe6\x9e\x9c\xe6\xa0\xb7\xe6\x9d\xa1\xe8\x8a\x82\xe7\x82\xb9\xe6\x95\xb0\xe5\xb0\x8f\xe4\xba\x8e2\xef\xbc\x8c\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xb1\xe8\xb4\xa5\n'}
[8.825401] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.825476] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[8.834228] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:445:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kparam\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kparam_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.834447] (sfuise) StderrLine: {'line': b'  445 |         if (\x1b[01;31m\x1b[Kparam\x1b[m\x1b[K.if_reject_uwb) { // \xe5\xa6\x82\xe6\x9e\x9c\xe9\x9c\x80\xe8\xa6\x81\xe6\x8b\x92\xe7\xbb\x9dUWB\n'}
[8.834535] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.834606] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kparam_\x1b[m\x1b[K\n'}
[8.841253] (-) TimerEvent: {}
[8.843670] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:446:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksolver_flag\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ksolver_flag_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.843877] (sfuise) StderrLine: {'line': b'  446 |             if (\x1b[01;31m\x1b[Ksolver_flag\x1b[m\x1b[K == INITIAL && spline_local.numKnots() < int(param.reject_uwb_window_width * window_size))\n'}
[8.844000] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.844075] (sfuise) StderrLine: {'line': b'      |                 \x1b[32m\x1b[Ksolver_flag_\x1b[m\x1b[K\n'}
[8.855384] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:446:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KINITIAL\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.855580] (sfuise) StderrLine: {'line': b'  446 |             if (solver_flag == \x1b[01;31m\x1b[KINITIAL\x1b[m\x1b[K && spline_local.numKnots() < int(param.reject_uwb_window_width * window_size))\n'}
[8.855674] (sfuise) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.864321] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:446:43:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.864521] (sfuise) StderrLine: {'line': b'  446 |             if (solver_flag == INITIAL && \x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K.numKnots() < int(param.reject_uwb_window_width * window_size))\n'}
[8.864603] (sfuise) StderrLine: {'line': b'      |                                           \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.864671] (sfuise) StderrLine: {'line': b'      |                                           \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[8.873002] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:446:105:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kwindow_size\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kwindow_size_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.873220] (sfuise) StderrLine: {'line': b'  446 |             if (solver_flag == INITIAL && spline_local.numKnots() < int(param.reject_uwb_window_width * \x1b[01;31m\x1b[Kwindow_size\x1b[m\x1b[K))\n'}
[8.873307] (sfuise) StderrLine: {'line': b'      |                                                                                                         \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.873379] (sfuise) StderrLine: {'line': b'      |                                                                                                         \x1b[32m\x1b[Kwindow_size_\x1b[m\x1b[K\n'}
[8.882347] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:454:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kwindow_count\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kwindow_count_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.882556] (sfuise) StderrLine: {'line': b'  454 |         if ((int)\x1b[01;31m\x1b[Kwindow_count\x1b[m\x1b[K >= n_window_calib) { // \xe5\xa6\x82\xe6\x9e\x9c\xe7\xaa\x97\xe5\x8f\xa3\xe8\xae\xa1\xe6\x95\xb0\xe8\xbe\xbe\xe5\x88\xb0\xe6\xa0\xa1\xe5\x87\x86\xe7\xaa\x97\xe5\x8f\xa3\xe6\x95\xb0\n'}
[8.882643] (sfuise) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.882715] (sfuise) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kwindow_count_\x1b[m\x1b[K\n'}
[8.891799] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:454:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kn_window_calib\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kn_window_calib_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.892011] (sfuise) StderrLine: {'line': b'  454 |         if ((int)window_count >= \x1b[01;31m\x1b[Kn_window_calib\x1b[m\x1b[K) { // \xe5\xa6\x82\xe6\x9e\x9c\xe7\xaa\x97\xe5\x8f\xa3\xe8\xae\xa1\xe6\x95\xb0\xe8\xbe\xbe\xe5\x88\xb0\xe6\xa0\xa1\xe5\x87\x86\xe7\xaa\x97\xe5\x8f\xa3\xe6\x95\xb0\n'}
[8.892089] (sfuise) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.892153] (sfuise) StderrLine: {'line': b'      |                                  \x1b[32m\x1b[Kn_window_calib_\x1b[m\x1b[K\n'}
[8.899383] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:455:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kparam\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kparam_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.899566] (sfuise) StderrLine: {'line': b'  455 |             \x1b[01;31m\x1b[Kparam\x1b[m\x1b[K.if_opt_g = false; // \xe4\xb8\x8d\xe4\xbc\x98\xe5\x8c\x96\xe9\x87\x8d\xe5\x8a\x9b\n'}
[8.899642] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[8.899708] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kparam_\x1b[m\x1b[K\n'}
[8.907793] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:459:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.907987] (sfuise) StderrLine: {'line': b'  459 |         if (!\x1b[01;31m\x1b[Kif_uwb_only\x1b[m\x1b[K) updateMeasurements(imu_window, imu_buff); // \xe6\x9b\xb4\xe6\x96\xb0IMU\xe6\xb5\x8b\xe9\x87\x8f\n'}
[8.908080] (sfuise) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.908146] (sfuise) StderrLine: {'line': b'      |              \x1b[32m\x1b[Kif_uwb_only_\x1b[m\x1b[K\n'}
[8.915912] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:459:46:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kimu_window\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kimu_window_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.916092] (sfuise) StderrLine: {'line': b'  459 |         if (!if_uwb_only) updateMeasurements(\x1b[01;31m\x1b[Kimu_window\x1b[m\x1b[K, imu_buff); // \xe6\x9b\xb4\xe6\x96\xb0IMU\xe6\xb5\x8b\xe9\x87\x8f\n'}
[8.916168] (sfuise) StderrLine: {'line': b'      |                                              \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.916245] (sfuise) StderrLine: {'line': b'      |                                              \x1b[32m\x1b[Kimu_window_\x1b[m\x1b[K\n'}
[8.923963] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:459:58:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kimu_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kimu_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.924144] (sfuise) StderrLine: {'line': b'  459 |         if (!if_uwb_only) updateMeasurements(imu_window, \x1b[01;31m\x1b[Kimu_buff\x1b[m\x1b[K); // \xe6\x9b\xb4\xe6\x96\xb0IMU\xe6\xb5\x8b\xe9\x87\x8f\n'}
[8.924220] (sfuise) StderrLine: {'line': b'      |                                                          \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.924296] (sfuise) StderrLine: {'line': b'      |                                                          \x1b[32m\x1b[Kimu_buff_\x1b[m\x1b[K\n'}
[8.931707] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:460:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_tdoa\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_tdoa_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.931888] (sfuise) StderrLine: {'line': b'  460 |         if (\x1b[01;31m\x1b[Kif_tdoa\x1b[m\x1b[K) {\n'}
[8.931996] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.932060] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kif_tdoa_\x1b[m\x1b[K\n'}
[8.939799] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:461:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktdoa_window\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktdoa_window_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.939991] (sfuise) StderrLine: {'line': b'  461 |             updateMeasurements(\x1b[01;31m\x1b[Ktdoa_window\x1b[m\x1b[K, tdoa_buff); // \xe6\x9b\xb4\xe6\x96\xb0TDOA\xe6\xb5\x8b\xe9\x87\x8f\n'}
[8.940067] (sfuise) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.940158] (sfuise) StderrLine: {'line': b'      |                                \x1b[32m\x1b[Ktdoa_window_\x1b[m\x1b[K\n'}
[8.941382] (-) TimerEvent: {}
[8.947898] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:461:45:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktdoa_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktdoa_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.948087] (sfuise) StderrLine: {'line': b'  461 |             updateMeasurements(tdoa_window, \x1b[01;31m\x1b[Ktdoa_buff\x1b[m\x1b[K); // \xe6\x9b\xb4\xe6\x96\xb0TDOA\xe6\xb5\x8b\xe9\x87\x8f\n'}
[8.948176] (sfuise) StderrLine: {'line': b'      |                                             \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[8.948240] (sfuise) StderrLine: {'line': b'      |                                             \x1b[32m\x1b[Ktdoa_buff_\x1b[m\x1b[K\n'}
[8.956069] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:463:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktoa_window\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktoa_window_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.956249] (sfuise) StderrLine: {'line': b'  463 |             updateMeasurements(\x1b[01;31m\x1b[Ktoa_window\x1b[m\x1b[K, toa_buff); // \xe6\x9b\xb4\xe6\x96\xb0TOA\xe6\xb5\x8b\xe9\x87\x8f\n'}
[8.956328] (sfuise) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.956393] (sfuise) StderrLine: {'line': b'      |                                \x1b[32m\x1b[Ktoa_window_\x1b[m\x1b[K\n'}
[8.964109] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:463:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktoa_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktoa_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.964288] (sfuise) StderrLine: {'line': b'  463 |             updateMeasurements(toa_window, \x1b[01;31m\x1b[Ktoa_buff\x1b[m\x1b[K); // \xe6\x9b\xb4\xe6\x96\xb0TOA\xe6\xb5\x8b\xe9\x87\x8f\n'}
[8.964366] (sfuise) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[8.964431] (sfuise) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Ktoa_buff_\x1b[m\x1b[K\n'}
[8.972223] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:468:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kpose_fixed\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kpose_fixed_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.972430] (sfuise) StderrLine: {'line': b'  468 |         \x1b[01;31m\x1b[Kpose_fixed\x1b[m\x1b[K = false; // \xe4\xbd\x8d\xe5\xa7\xbf\xe5\x9b\xba\xe5\xae\x9a\xe6\xa0\x87\xe5\xbf\x97\n'}
[8.972511] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[8.972581] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kpose_fixed_\x1b[m\x1b[K\n'}
[8.981507] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:470:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ksolver_flag\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ksolver_flag_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.981730] (sfuise) StderrLine: {'line': b'  470 |         if (\x1b[01;31m\x1b[Ksolver_flag\x1b[m\x1b[K == INITIAL) {\n'}
[8.981820] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[8.981896] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Ksolver_flag_\x1b[m\x1b[K\n'}
[8.993036] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:470:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[KINITIAL\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope\n'}
[8.993233] (sfuise) StderrLine: {'line': b'  470 |         if (solver_flag == \x1b[01;31m\x1b[KINITIAL\x1b[m\x1b[K) {\n'}
[8.993311] (sfuise) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[8.993762] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:473:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klambda\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kboost::mpl::lambda\x1b[m\x1b[K\xe2\x80\x99?\n'}
[8.993962] (sfuise) StderrLine: {'line': b'  473 |         \x1b[01;31m\x1b[Klambda\x1b[m\x1b[K = 1e-6; // \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe6\xad\xa5\xe9\x95\xbf\n'}
[8.994041] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[8.994103] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kboost::mpl::lambda\x1b[m\x1b[K\n'}
[8.994163] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/mpl/aux_/na_spec.hpp:18\x1b[m\x1b[K,\n'}
[8.994223] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/mpl/if.hpp:19\x1b[m\x1b[K,\n'}
[8.994287] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:18\x1b[m\x1b[K,\n'}
[8.994346] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/sinc.hpp:19\x1b[m\x1b[K,\n'}
[8.994404] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/utils/math_tools.h:5\x1b[m\x1b[K,\n'}
[8.994462] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/Linearizer.h:4\x1b[m\x1b[K,\n'}
[8.994523] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:2\x1b[m\x1b[K:\n'}
[8.994582] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/mpl/lambda_fwd.hpp:36:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kboost::mpl::lambda\x1b[m\x1b[K\xe2\x80\x99 declared here\n'}
[8.994641] (sfuise) StderrLine: {'line': b'   36 | struct \x1b[01;36m\x1b[Klambda\x1b[m\x1b[K;\n'}
[8.994697] (sfuise) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[9.002169] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:474:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klambda_vee\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Klambda_vee_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.002362] (sfuise) StderrLine: {'line': b'  474 |         \x1b[01;31m\x1b[Klambda_vee\x1b[m\x1b[K = 2; // \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe6\xad\xa5\xe9\x95\xbf\xe5\x80\x8d\xe5\xa2\x9e\xe5\x9b\xa0\xe5\xad\x90\n'}
[9.002446] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.002517] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Klambda_vee_\x1b[m\x1b[K\n'}
[9.010836] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:477:41:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kmax_iter\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kmax_iter_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.011036] (sfuise) StderrLine: {'line': b'  477 |         while (!converged && opt_iter < \x1b[01;31m\x1b[Kmax_iter\x1b[m\x1b[K) { // \xe8\xbf\xad\xe4\xbb\xa3\xe4\xbc\x98\xe5\x8c\x96\n'}
[9.011116] (sfuise) StderrLine: {'line': b'      |                                         \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.011180] (sfuise) StderrLine: {'line': b'      |                                         \x1b[32m\x1b[Kmax_iter_\x1b[m\x1b[K\n'}
[9.019105] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool SplineFusion::setParameters()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.019287] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:487:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kimu_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kimu_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.019380] (sfuise) StderrLine: {'line': b'  487 |         if (\x1b[01;31m\x1b[Kimu_buff\x1b[m\x1b[K.empty() && !if_uwb_only) return false; // \xe5\xa6\x82\xe6\x9e\x9cIMU\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\xe4\xb8\xba\xe7\xa9\xba\xe4\xb8\x94\xe4\xb8\x8d\xe5\x8f\xaa\xe4\xbd\xbf\xe7\x94\xa8UWB\xef\xbc\x8c\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xb1\xe8\xb4\xa5\n'}
[9.019447] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.019511] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kimu_buff_\x1b[m\x1b[K\n'}
[9.027198] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:487:34:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.027374] (sfuise) StderrLine: {'line': b'  487 |         if (imu_buff.empty() && !\x1b[01;31m\x1b[Kif_uwb_only\x1b[m\x1b[K) return false; // \xe5\xa6\x82\xe6\x9e\x9cIMU\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\xe4\xb8\xba\xe7\xa9\xba\xe4\xb8\x94\xe4\xb8\x8d\xe5\x8f\xaa\xe4\xbd\xbf\xe7\x94\xa8UWB\xef\xbc\x8c\xe8\xbf\x94\xe5\x9b\x9e\xe5\xa4\xb1\xe8\xb4\xa5\n'}
[9.027451] (sfuise) StderrLine: {'line': b'      |                                  \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.027518] (sfuise) StderrLine: {'line': b'      |                                  \x1b[32m\x1b[Kif_uwb_only_\x1b[m\x1b[K\n'}
[9.035141] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:488:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kimu_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kimu_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.035335] (sfuise) StderrLine: {'line': b'  488 |         if (\x1b[01;31m\x1b[Kimu_buff\x1b[m\x1b[K.empty() && toa_buff.empty() && tdoa_buff.empty()) { // \xe5\xa6\x82\xe6\x9e\x9c\xe6\x89\x80\xe6\x9c\x89\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\xe9\x83\xbd\xe4\xb8\xba\xe7\xa9\xba\n'}
[9.035416] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.035481] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kimu_buff_\x1b[m\x1b[K\n'}
[9.041468] (-) TimerEvent: {}
[9.043166] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:488:33:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktoa_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktoa_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.043349] (sfuise) StderrLine: {'line': b'  488 |         if (imu_buff.empty() && \x1b[01;31m\x1b[Ktoa_buff\x1b[m\x1b[K.empty() && tdoa_buff.empty()) { // \xe5\xa6\x82\xe6\x9e\x9c\xe6\x89\x80\xe6\x9c\x89\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\xe9\x83\xbd\xe4\xb8\xba\xe7\xa9\xba\n'}
[9.043427] (sfuise) StderrLine: {'line': b'      |                                 \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.043504] (sfuise) StderrLine: {'line': b'      |                                 \x1b[32m\x1b[Ktoa_buff_\x1b[m\x1b[K\n'}
[9.051265] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:488:53:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktdoa_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktdoa_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.051448] (sfuise) StderrLine: {'line': b'  488 |         if (imu_buff.empty() && toa_buff.empty() && \x1b[01;31m\x1b[Ktdoa_buff\x1b[m\x1b[K.empty()) { // \xe5\xa6\x82\xe6\x9e\x9c\xe6\x89\x80\xe6\x9c\x89\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\xe9\x83\xbd\xe4\xb8\xba\xe7\xa9\xba\n'}
[9.051543] (sfuise) StderrLine: {'line': b'      |                                                     \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[9.051609] (sfuise) StderrLine: {'line': b'      |                                                     \x1b[32m\x1b[Ktdoa_buff_\x1b[m\x1b[K\n'}
[9.059856] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:492:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbag_start_time\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kbag_start_time_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.060055] (sfuise) StderrLine: {'line': b'  492 |                 \x1b[01;31m\x1b[Kbag_start_time\x1b[m\x1b[K += imu_buff.front().time_ns; // \xe6\x9b\xb4\xe6\x96\xb0\xe8\xa1\x8c\xe6\x9d\x8e\xe5\xbc\x80\xe5\xa7\x8b\xe6\x97\xb6\xe9\x97\xb4\n'}
[9.060133] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.060200] (sfuise) StderrLine: {'line': b'      |                 \x1b[32m\x1b[Kbag_start_time_\x1b[m\x1b[K\n'}
[9.068200] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:494:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbag_start_time\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kbag_start_time_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.068381] (sfuise) StderrLine: {'line': b'  494 |                 \x1b[01;31m\x1b[Kbag_start_time\x1b[m\x1b[K += toa_buff.front().time_ns; // \xe6\x9b\xb4\xe6\x96\xb0\xe8\xa1\x8c\xe6\x9d\x8e\xe5\xbc\x80\xe5\xa7\x8b\xe6\x97\xb6\xe9\x97\xb4\n'}
[9.068457] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.068520] (sfuise) StderrLine: {'line': b'      |                 \x1b[32m\x1b[Kbag_start_time_\x1b[m\x1b[K\n'}
[9.077200] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:496:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbag_start_time\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kbag_start_time_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.077396] (sfuise) StderrLine: {'line': b'  496 |                 \x1b[01;31m\x1b[Kbag_start_time\x1b[m\x1b[K += tdoa_buff.front().time_ns; // \xe6\x9b\xb4\xe6\x96\xb0\xe8\xa1\x8c\xe6\x9d\x8e\xe5\xbc\x80\xe5\xa7\x8b\xe6\x97\xb6\xe9\x97\xb4\n'}
[9.077474] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.077539] (sfuise) StderrLine: {'line': b'      |                 \x1b[32m\x1b[Kbag_start_time_\x1b[m\x1b[K\n'}
[9.092957] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:499:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Knext_knot_TimeNs\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Knext_knot_time_ns_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.093157] (sfuise) StderrLine: {'line': b'  499 |         \x1b[01;31m\x1b[Knext_knot_TimeNs\x1b[m\x1b[K = bag_start_time; // \xe8\xae\xbe\xe7\xbd\xae\xe4\xb8\x8b\xe4\xb8\x80\xe4\xb8\xaa\xe8\x8a\x82\xe7\x82\xb9\xe6\x97\xb6\xe9\x97\xb4\n'}
[9.093233] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.093297] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Knext_knot_time_ns_\x1b[m\x1b[K\n'}
[9.101434] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:499:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbag_start_time\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kbag_start_time_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.101634] (sfuise) StderrLine: {'line': b'  499 |         next_knot_TimeNs = \x1b[01;31m\x1b[Kbag_start_time\x1b[m\x1b[K; // \xe8\xae\xbe\xe7\xbd\xae\xe4\xb8\x8b\xe4\xb8\x80\xe4\xb8\xaa\xe8\x8a\x82\xe7\x82\xb9\xe6\x97\xb6\xe9\x97\xb4\n'}
[9.101712] (sfuise) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.101777] (sfuise) StderrLine: {'line': b'      |                            \x1b[32m\x1b[Kbag_start_time_\x1b[m\x1b[K\n'}
[9.110895] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineFusion::integrateStep(int64_t, int64_t, const ImuData&, Eigen::Matrix3d&, Eigen::Vector3d&, Eigen::Vector3d&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.111140] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:517:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcalib_param\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalib_param_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.111228] (sfuise) StderrLine: {'line': b'  517 |         Eigen::Vector3d g = \x1b[01;31m\x1b[Kcalib_param\x1b[m\x1b[K.gravity; // \xe8\x8e\xb7\xe5\x8f\x96\xe9\x87\x8d\xe5\x8a\x9b\n'}
[9.111305] (sfuise) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.111374] (sfuise) StderrLine: {'line': b'      |                             \x1b[32m\x1b[Kcalib_param_\x1b[m\x1b[K\n'}
[9.120432] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:520:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.120625] (sfuise) StderrLine: {'line': b'  520 |         Eigen::Matrix<double, 6, 1> bias = \x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K.itpBias(prevTime); // \xe8\x8e\xb7\xe5\x8f\x96\xe5\x81\x8f\xe5\xb7\xae\n'}
[9.120708] (sfuise) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.120788] (sfuise) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[9.141678] (-) TimerEvent: {}
[9.213396] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineFusion::integration(int64_t, Eigen::Quaterniond&, Eigen::Vector3d&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.213671] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:542:24:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klast_imu_t_ns\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Klast_imu_t_ns_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.213782] (sfuise) StderrLine: {'line': b'  542 |         getIMUInterval(\x1b[01;31m\x1b[Klast_imu_t_ns\x1b[m\x1b[K, curTime, imu_vec); // \xe8\x8e\xb7\xe5\x8f\x96IMU\xe6\x97\xb6\xe9\x97\xb4\xe5\x8c\xba\xe9\x97\xb4\xe6\x95\xb0\xe6\x8d\xae\n'}
[9.213859] (sfuise) StderrLine: {'line': b'      |                        \x1b[01;31m\x1b[K^~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.213955] (sfuise) StderrLine: {'line': b'      |                        \x1b[32m\x1b[Klast_imu_t_ns_\x1b[m\x1b[K\n'}
[9.223140] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:546:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.223376] (sfuise) StderrLine: {'line': b'  546 |             \x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K.itpQuaternion(last_imu_t_ns, &qs0); // \xe8\x8e\xb7\xe5\x8f\x96\xe6\x8f\x92\xe5\x80\xbc\xe5\x9b\x9b\xe5\x85\x83\xe6\x95\xb0\n'}
[9.223464] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.223539] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[9.233239] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:564:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.233450] (sfuise) StderrLine: {'line': b'  564 |             qs = \x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K.extrapolateOrtKnot(1); // \xe5\xa4\x96\xe6\x8e\xa8\xe5\x9b\x9b\xe5\x85\x83\xe6\x95\xb0\n'}
[9.233538] (sfuise) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.233611] (sfuise) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[9.241864] (-) TimerEvent: {}
[9.242791] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool SplineFusion::getIMUInterval(int64_t, int64_t, std::vector<ImuData>&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.243007] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:571:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kimu_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kimu_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.243097] (sfuise) StderrLine: {'line': b'  571 |         if (\x1b[01;31m\x1b[Kimu_buff\x1b[m\x1b[K.empty()) { // \xe5\xa6\x82\xe6\x9e\x9cIMU\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\xe4\xb8\xba\xe7\xa9\xba\n'}
[9.243170] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.243589] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kimu_buff_\x1b[m\x1b[K\n'}
[9.243712] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:40\x1b[m\x1b[K,\n'}
[9.243791] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[9.243864] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[9.243954] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[9.244024] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[9.244105] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[9.244169] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[9.244236] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[9.244300] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[9.244367] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[9.244436] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:1\x1b[m\x1b[K:\n'}
[9.244501] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:572:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass SplineFusion\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kget_logger\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.244570] (sfuise) StderrLine: {'line': b'  572 |             RCLCPP_ERROR(this->\x1b[01;31m\x1b[Kget_logger\x1b[m\x1b[K(), "No IMU available."); // \xe8\xbe\x93\xe5\x87\xba\xe9\x94\x99\xe8\xaf\xaf\xe4\xbf\xa1\xe6\x81\xaf\n'}
[9.244634] (sfuise) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.244698] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:572:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass SplineFusion\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kget_logger\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.244763] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:572:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[9.244834] (sfuise) StderrLine: {'line': b'  572 |             \x1b[01;31m\x1b[KRCLCPP_ERROR\x1b[m\x1b[K(this->get_logger(), "No IMU available."); // \xe8\xbe\x93\xe5\x87\xba\xe9\x94\x99\xe8\xaf\xaf\xe4\xbf\xa1\xe6\x81\xaf\n'}
[9.244896] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.244967] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:572:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[9.245035] (sfuise) StderrLine: {'line': b'  572 |             \x1b[01;31m\x1b[KRCLCPP_ERROR\x1b[m\x1b[K(this->get_logger(), "No IMU available."); // \xe8\xbe\x93\xe5\x87\xba\xe9\x94\x99\xe8\xaf\xaf\xe4\xbf\xa1\xe6\x81\xaf\n'}
[9.245097] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.245159] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:572:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Ktemplate argument 1 is invalid\n'}
[9.245222] (sfuise) StderrLine: {'line': b'  572 |             \x1b[01;31m\x1b[KRCLCPP_ERROR\x1b[m\x1b[K(this->get_logger(), "No IMU available."); // \xe8\xbe\x93\xe5\x87\xba\xe9\x94\x99\xe8\xaf\xaf\xe4\xbf\xa1\xe6\x81\xaf\n'}
[9.245283] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.245345] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/logging.hpp:24\x1b[m\x1b[K,\n'}
[9.245406] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:40\x1b[m\x1b[K,\n'}
[9.245466] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[9.245529] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[9.245592] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[9.245653] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[9.245716] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[9.245778] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[9.245843] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[9.245911] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[9.245979] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[9.246042] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:1\x1b[m\x1b[K:\n'}
[9.246105] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:572:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass SplineFusion\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kget_logger\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.246172] (sfuise) StderrLine: {'line': b'  572 |             RCLCPP_ERROR(this->\x1b[01;31m\x1b[Kget_logger\x1b[m\x1b[K(), "No IMU available."); // \xe8\xbe\x93\xe5\x87\xba\xe9\x94\x99\xe8\xaf\xaf\xe4\xbf\xa1\xe6\x81\xaf\n'}
[9.246237] (sfuise) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.246308] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:572:32:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass SplineFusion\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Kget_logger\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.246372] (sfuise) StderrLine: {'line': b'  572 |             RCLCPP_ERROR(this->\x1b[01;31m\x1b[Kget_logger\x1b[m\x1b[K(), "No IMU available."); // \xe8\xbe\x93\xe5\x87\xba\xe9\x94\x99\xe8\xaf\xaf\xe4\xbf\xa1\xe6\x81\xaf\n'}
[9.246436] (sfuise) StderrLine: {'line': b'      |                                \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.252707] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:576:16:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kimu_buff\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kimu_buff_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.252930] (sfuise) StderrLine: {'line': b'  576 |         while (\x1b[01;31m\x1b[Kimu_buff\x1b[m\x1b[K.at(idx).time_ns <= std::min(imu_buff.back().time_ns, t1)) { // \xe9\x81\x8d\xe5\x8e\x86IMU\xe7\xbc\x93\xe5\x86\xb2\xe5\x8c\xba\n'}
[9.253027] (sfuise) StderrLine: {'line': b'      |                \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[9.253107] (sfuise) StderrLine: {'line': b'      |                \x1b[32m\x1b[Kimu_buff_\x1b[m\x1b[K\n'}
[9.253266] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineFusion::displayControlPoints()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.253379] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:589:50:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass SplineFusion\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Know\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.253452] (sfuise) StderrLine: {'line': b'  589 |         points_inactive_msg.header.stamp = this->\x1b[01;31m\x1b[Know\x1b[m\x1b[K(); // \xe8\xae\xbe\xe7\xbd\xae\xe6\x97\xb6\xe9\x97\xb4\xe6\x88\xb3\n'}
[9.253521] (sfuise) StderrLine: {'line': b'      |                                                  \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[9.263220] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:590:58:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.263463] (sfuise) StderrLine: {'line': b'  590 |         points_inactive_msg.points.push_back(getPointMsg(\x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K.getIdlePos(0))); // \xe6\xb7\xbb\xe5\x8a\xa0\xe7\xac\xac\xe4\xb8\x80\xe4\xb8\xaa\xe9\x9d\x9e\xe6\xb4\xbb\xe5\x8a\xa8\xe6\x8e\xa7\xe5\x88\xb6\xe7\x82\xb9\n'}
[9.263555] (sfuise) StderrLine: {'line': b'      |                                                          \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.263635] (sfuise) StderrLine: {'line': b'      |                                                          \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[9.263713] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:597:48:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass SplineFusion\x1b[m\x1b[K\xe2\x80\x99 has no member named \xe2\x80\x98\x1b[01m\x1b[Know\x1b[m\x1b[K\xe2\x80\x99\n'}
[9.263790] (sfuise) StderrLine: {'line': b'  597 |         points_active_msg.header.stamp = this->\x1b[01;31m\x1b[Know\x1b[m\x1b[K(); // \xe8\xae\xbe\xe7\xbd\xae\xe6\x97\xb6\xe9\x97\xb4\xe6\x88\xb3\n'}
[9.263866] (sfuise) StderrLine: {'line': b'      |                                                \x1b[01;31m\x1b[K^~~\x1b[m\x1b[K\n'}
[9.274695] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:603:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kpub_knots_inactive\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kpub_knots_inactive_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.274972] (sfuise) StderrLine: {'line': b'  603 |         \x1b[01;31m\x1b[Kpub_knots_inactive\x1b[m\x1b[K->publish(points_inactive_msg);\n'}
[9.275071] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.275152] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kpub_knots_inactive_\x1b[m\x1b[K\n'}
[9.286431] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:604:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kpub_knots_active\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kpub_knots_active_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.286676] (sfuise) StderrLine: {'line': b'  604 |         \x1b[01;31m\x1b[Kpub_knots_active\x1b[m\x1b[K->publish(points_active_msg);\n'}
[9.286767] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.286844] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kpub_knots_active_\x1b[m\x1b[K\n'}
[9.296137] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kgeometry_msgs::msg::Point32 SplineFusion::getPointMsg(Eigen::Vector3d)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.296360] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:610:31:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcalib_param\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalib_param_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.296455] (sfuise) StderrLine: {'line': b'  610 |         Eigen::Vector3d p_U = \x1b[01;31m\x1b[Kcalib_param\x1b[m\x1b[K.q_nav_uwb * p + calib_param.t_nav_uwb; // \xe8\xae\xa1\xe7\xae\x97\xe6\xa0\xa1\xe5\x87\x86\xe5\x90\x8e\xe7\x9a\x84\xe7\x82\xb9\n'}
[9.296548] (sfuise) StderrLine: {'line': b'      |                               \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.296621] (sfuise) StderrLine: {'line': b'      |                               \x1b[32m\x1b[Kcalib_param_\x1b[m\x1b[K\n'}
[9.307870] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool SplineFusion::optimize(int)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.308125] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:619:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbias_block_offset\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kbias_block_offset_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.308217] (sfuise) StderrLine: {'line': b'  619 |         Linearizer lopt(\x1b[01;31m\x1b[Kbias_block_offset\x1b[m\x1b[K, gravity_block_offset, hess_size, &spline_local, &calib_param, &param, pose_fixed);\n'}
[9.308291] (sfuise) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.308361] (sfuise) StderrLine: {'line': b'      |                         \x1b[32m\x1b[Kbias_block_offset_\x1b[m\x1b[K\n'}
[9.320325] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:619:44:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kgravity_block_offset\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kgravity_block_offset_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.320574] (sfuise) StderrLine: {'line': b'  619 |         Linearizer lopt(bias_block_offset, \x1b[01;31m\x1b[Kgravity_block_offset\x1b[m\x1b[K, hess_size, &spline_local, &calib_param, &param, pose_fixed);\n'}
[9.320664] (sfuise) StderrLine: {'line': b'      |                                            \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.320739] (sfuise) StderrLine: {'line': b'      |                                            \x1b[32m\x1b[Kgravity_block_offset_\x1b[m\x1b[K\n'}
[9.329809] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:619:66:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Khess_size\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Khess_size_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.330042] (sfuise) StderrLine: {'line': b'  619 |         Linearizer lopt(bias_block_offset, gravity_block_offset, \x1b[01;31m\x1b[Khess_size\x1b[m\x1b[K, &spline_local, &calib_param, &param, pose_fixed);\n'}
[9.330132] (sfuise) StderrLine: {'line': b'      |                                                                  \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[9.330227] (sfuise) StderrLine: {'line': b'      |                                                                  \x1b[32m\x1b[Khess_size_\x1b[m\x1b[K\n'}
[9.339334] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:619:78:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.339566] (sfuise) StderrLine: {'line': b'  619 |         Linearizer lopt(bias_block_offset, gravity_block_offset, hess_size, &\x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K, &calib_param, &param, pose_fixed);\n'}
[9.339653] (sfuise) StderrLine: {'line': b'      |                                                                              \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.339728] (sfuise) StderrLine: {'line': b'      |                                                                              \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[9.342057] (-) TimerEvent: {}
[9.348721] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:619:93:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcalib_param\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalib_param_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.348949] (sfuise) StderrLine: {'line': b'  619 |         Linearizer lopt(bias_block_offset, gravity_block_offset, hess_size, &spline_local, &\x1b[01;31m\x1b[Kcalib_param\x1b[m\x1b[K, &param, pose_fixed);\n'}
[9.349040] (sfuise) StderrLine: {'line': b'      |                                                                                             \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.349113] (sfuise) StderrLine: {'line': b'      |                                                                                             \x1b[32m\x1b[Kcalib_param_\x1b[m\x1b[K\n'}
[9.357176] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:619:107:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kparam\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kparam_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.357384] (sfuise) StderrLine: {'line': b'  619 |         Linearizer lopt(bias_block_offset, gravity_block_offset, hess_size, &spline_local, &calib_param, &\x1b[01;31m\x1b[Kparam\x1b[m\x1b[K, pose_fixed);\n'}
[9.357474] (sfuise) StderrLine: {'line': b'      |                                                                                                           \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[9.357546] (sfuise) StderrLine: {'line': b'      |                                                                                                           \x1b[32m\x1b[Kparam_\x1b[m\x1b[K\n'}
[9.366432] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:619:114:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kpose_fixed\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kpose_fixed_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.366642] (sfuise) StderrLine: {'line': b'  619 |         Linearizer lopt(bias_block_offset, gravity_block_offset, hess_size, &spline_local, &calib_param, &param, \x1b[01;31m\x1b[Kpose_fixed\x1b[m\x1b[K);\n'}
[9.366729] (sfuise) StderrLine: {'line': b'      |                                                                                                                  \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.366801] (sfuise) StderrLine: {'line': b'      |                                                                                                                  \x1b[32m\x1b[Kpose_fixed_\x1b[m\x1b[K\n'}
[9.375937] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:620:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kimu_window\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kimu_window_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.376164] (sfuise) StderrLine: {'line': b'  620 |         if (!\x1b[01;31m\x1b[Kimu_window\x1b[m\x1b[K.empty()) lopt(imu_window);\n'}
[9.376251] (sfuise) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.376324] (sfuise) StderrLine: {'line': b'      |              \x1b[32m\x1b[Kimu_window_\x1b[m\x1b[K\n'}
[9.385744] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:621:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktdoa_window\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktdoa_window_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.385975] (sfuise) StderrLine: {'line': b'  621 |         if (!\x1b[01;31m\x1b[Ktdoa_window\x1b[m\x1b[K.empty()) lopt(tdoa_window);\n'}
[9.386067] (sfuise) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.386141] (sfuise) StderrLine: {'line': b'      |              \x1b[32m\x1b[Ktdoa_window_\x1b[m\x1b[K\n'}
[9.395016] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:622:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktoa_window\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktoa_window_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.395220] (sfuise) StderrLine: {'line': b'  622 |         if (!\x1b[01;31m\x1b[Ktoa_window\x1b[m\x1b[K.empty()) lopt(toa_window);\n'}
[9.395306] (sfuise) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.395376] (sfuise) StderrLine: {'line': b'      |              \x1b[32m\x1b[Ktoa_window_\x1b[m\x1b[K\n'}
[9.426875] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:634:52:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klambda\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kboost::mpl::lambda\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.427179] (sfuise) StderrLine: {'line': b'  634 |             Eigen::VectorXd Hdiag_lambda = Hdiag * \x1b[01;31m\x1b[Klambda\x1b[m\x1b[K;\n'}
[9.427266] (sfuise) StderrLine: {'line': b'      |                                                    \x1b[01;31m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[9.427340] (sfuise) StderrLine: {'line': b'      |                                                    \x1b[32m\x1b[Kboost::mpl::lambda\x1b[m\x1b[K\n'}
[9.427415] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/mpl/aux_/na_spec.hpp:18\x1b[m\x1b[K,\n'}
[9.427485] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/mpl/if.hpp:19\x1b[m\x1b[K,\n'}
[9.427555] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/tools/precision.hpp:18\x1b[m\x1b[K,\n'}
[9.427624] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/math/special_functions/sinc.hpp:19\x1b[m\x1b[K,\n'}
[9.427689] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/utils/math_tools.h:5\x1b[m\x1b[K,\n'}
[9.427756] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/../include/Linearizer.h:4\x1b[m\x1b[K,\n'}
[9.427821] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:2\x1b[m\x1b[K:\n'}
[9.427885] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/boost/mpl/lambda_fwd.hpp:36:8:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kboost::mpl::lambda\x1b[m\x1b[K\xe2\x80\x99 declared here\n'}
[9.427964] (sfuise) StderrLine: {'line': b'   36 | struct \x1b[01;36m\x1b[Klambda\x1b[m\x1b[K;\n'}
[9.428030] (sfuise) StderrLine: {'line': b'      |        \x1b[01;36m\x1b[K^~~~~~\x1b[m\x1b[K\n'}
[9.442288] (-) TimerEvent: {}
[9.455338] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:649:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktoa_window\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktoa_window_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.455583] (sfuise) StderrLine: {'line': b'  649 |             if (!\x1b[01;31m\x1b[Ktoa_window\x1b[m\x1b[K.empty()) eopt(toa_window);\n'}
[9.455667] (sfuise) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.455756] (sfuise) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Ktoa_window_\x1b[m\x1b[K\n'}
[9.464826] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:650:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kimu_window\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kimu_window_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.465066] (sfuise) StderrLine: {'line': b'  650 |             if (!\x1b[01;31m\x1b[Kimu_window\x1b[m\x1b[K.empty()) eopt(imu_window);\n'}
[9.465152] (sfuise) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.465225] (sfuise) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Kimu_window_\x1b[m\x1b[K\n'}
[9.474497] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:651:18:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Ktdoa_window\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Ktdoa_window_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.474726] (sfuise) StderrLine: {'line': b'  651 |             if (!\x1b[01;31m\x1b[Ktdoa_window\x1b[m\x1b[K.empty()) eopt(tdoa_window);\n'}
[9.474812] (sfuise) StderrLine: {'line': b'      |                  \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.474887] (sfuise) StderrLine: {'line': b'      |                  \x1b[32m\x1b[Ktdoa_window_\x1b[m\x1b[K\n'}
[9.484779] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:658:42:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klambda_vee\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Klambda_vee_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.485028] (sfuise) StderrLine: {'line': b'  658 |                 lambda = std::min(100.0, \x1b[01;31m\x1b[Klambda_vee\x1b[m\x1b[K * lambda);\n'}
[9.485119] (sfuise) StderrLine: {'line': b'      |                                          \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.485194] (sfuise) StderrLine: {'line': b'      |                                          \x1b[32m\x1b[Klambda_vee_\x1b[m\x1b[K\n'}
[9.494616] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:670:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Klambda_vee\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Klambda_vee_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.494821] (sfuise) StderrLine: {'line': b'  670 |                 \x1b[01;31m\x1b[Klambda_vee\x1b[m\x1b[K = 2;\n'}
[9.494921] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~~~~~~\x1b[m\x1b[K\n'}
[9.495000] (sfuise) StderrLine: {'line': b'      |                 \x1b[32m\x1b[Klambda_vee_\x1b[m\x1b[K\n'}
[9.504670] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineFusion::updateLinearizerSize()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.504884] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:679:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.504990] (sfuise) StderrLine: {'line': b'  679 |         int num_knots = \x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K.numKnots();\n'}
[9.505066] (sfuise) StderrLine: {'line': b'      |                         \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.505137] (sfuise) StderrLine: {'line': b'      |                         \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[9.515452] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:680:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbias_block_offset\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kbias_block_offset_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.515680] (sfuise) StderrLine: {'line': b'  680 |         \x1b[01;31m\x1b[Kbias_block_offset\x1b[m\x1b[K = Linearizer::POSE_SIZE * num_knots;\n'}
[9.515774] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.515846] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kbias_block_offset_\x1b[m\x1b[K\n'}
[9.524803] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:681:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Khess_size\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Khess_size_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.525039] (sfuise) StderrLine: {'line': b'  681 |         \x1b[01;31m\x1b[Khess_size\x1b[m\x1b[K = bias_block_offset;\n'}
[9.525127] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[9.525200] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Khess_size_\x1b[m\x1b[K\n'}
[9.534214] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:682:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.534423] (sfuise) StderrLine: {'line': b'  682 |         if (!\x1b[01;31m\x1b[Kif_uwb_only\x1b[m\x1b[K) {\n'}
[9.534509] (sfuise) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.534582] (sfuise) StderrLine: {'line': b'      |              \x1b[32m\x1b[Kif_uwb_only_\x1b[m\x1b[K\n'}
[9.542477] (-) TimerEvent: {}
[9.546084] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:686:9:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kgravity_block_offset\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kgravity_block_offset_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.546310] (sfuise) StderrLine: {'line': b'  686 |         \x1b[01;31m\x1b[Kgravity_block_offset\x1b[m\x1b[K = hess_size;\n'}
[9.546397] (sfuise) StderrLine: {'line': b'      |         \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.546468] (sfuise) StderrLine: {'line': b'      |         \x1b[32m\x1b[Kgravity_block_offset_\x1b[m\x1b[K\n'}
[9.554650] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:688:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kparam\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kparam_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.554893] (sfuise) StderrLine: {'line': b'  688 |         if (\x1b[01;31m\x1b[Kparam\x1b[m\x1b[K.if_opt_transform) {\n'}
[9.554997] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[9.555071] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kparam_\x1b[m\x1b[K\n'}
[9.565167] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid SplineFusion::applyIncFull(Eigen::VectorXd&)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[9.565594] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:696:28:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kspline_local\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kspline_local_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.565816] (sfuise) StderrLine: {'line': b'  696 |         size_t num_knots = \x1b[01;31m\x1b[Kspline_local\x1b[m\x1b[K.numKnots();\n'}
[9.566079] (sfuise) StderrLine: {'line': b'      |                            \x1b[01;31m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.566349] (sfuise) StderrLine: {'line': b'      |                            \x1b[32m\x1b[Kspline_local_\x1b[m\x1b[K\n'}
[9.613823] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:703:14:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kif_uwb_only_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.614424] (sfuise) StderrLine: {'line': b'  703 |         if (!\x1b[01;31m\x1b[Kif_uwb_only\x1b[m\x1b[K) {\n'}
[9.614728] (sfuise) StderrLine: {'line': b'      |              \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.614990] (sfuise) StderrLine: {'line': b'      |              \x1b[32m\x1b[Kif_uwb_only_\x1b[m\x1b[K\n'}
[9.629815] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:705:91:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kbias_block_offset\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kbias_block_offset_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.630231] (sfuise) StderrLine: {'line': b'  705 |                 Eigen::Matrix<double, 6, 1> inc = inc_full.segment<Linearizer::BIAS_SIZE>(\x1b[01;31m\x1b[Kbias_block_offset\x1b[m\x1b[K + Linearizer::BIAS_SIZE * i);\n'}
[9.630423] (sfuise) StderrLine: {'line': b'      |                                                                                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.630599] (sfuise) StderrLine: {'line': b'      |                                                                                           \x1b[32m\x1b[Kbias_block_offset_\x1b[m\x1b[K\n'}
[9.641351] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:709:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kparam\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kparam_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.641738] (sfuise) StderrLine: {'line': b'  709 |             if (\x1b[01;31m\x1b[Kparam\x1b[m\x1b[K.if_opt_g) {\n'}
[9.641951] (sfuise) StderrLine: {'line': b'      |                 \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[9.642144] (sfuise) StderrLine: {'line': b'      |                 \x1b[32m\x1b[Kparam_\x1b[m\x1b[K\n'}
[9.642572] (-) TimerEvent: {}
[9.657110] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:710:75:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kgravity_block_offset\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kgravity_block_offset_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.657494] (sfuise) StderrLine: {'line': b'  710 |                 Eigen::VectorXd dg = inc_full.segment<Linearizer::G_SIZE>(\x1b[01;31m\x1b[Kgravity_block_offset\x1b[m\x1b[K);\n'}
[9.657696] (sfuise) StderrLine: {'line': b'      |                                                                           \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.657851] (sfuise) StderrLine: {'line': b'      |                                                                           \x1b[32m\x1b[Kgravity_block_offset_\x1b[m\x1b[K\n'}
[9.669077] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:711:39:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcalib_param\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalib_param_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.669533] (sfuise) StderrLine: {'line': b'  711 |                 Eigen::Vector3d g0 = (\x1b[01;31m\x1b[Kcalib_param\x1b[m\x1b[K.gravity + Sphere::TangentBasis(calib_param.gravity) * dg).normalized() * 9.81;\n'}
[9.669778] (sfuise) StderrLine: {'line': b'      |                                       \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.670003] (sfuise) StderrLine: {'line': b'      |                                       \x1b[32m\x1b[Kcalib_param_\x1b[m\x1b[K\n'}
[9.682168] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:716:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kparam\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kparam_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.682593] (sfuise) StderrLine: {'line': b'  716 |         if (\x1b[01;31m\x1b[Kparam\x1b[m\x1b[K.if_opt_transform) {\n'}
[9.682783] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~\x1b[m\x1b[K\n'}
[9.682976] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kparam_\x1b[m\x1b[K\n'}
[9.694467] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:717:13:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kcalib_param\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kcalib_param_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.694844] (sfuise) StderrLine: {'line': b'  717 |             \x1b[01;31m\x1b[Kcalib_param\x1b[m\x1b[K.t_nav_uwb += inc_full.segment<Linearizer::OFFSET_SIZE>(gravity_block_offset + Linearizer::TRANS_OFFSET);\n'}
[9.695045] (sfuise) StderrLine: {'line': b'      |             \x1b[01;31m\x1b[K^~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.695206] (sfuise) StderrLine: {'line': b'      |             \x1b[32m\x1b[Kcalib_param_\x1b[m\x1b[K\n'}
[9.709099] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:717:80:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kgravity_block_offset\x1b[m\x1b[K\xe2\x80\x99 was not declared in this scope; did you mean \xe2\x80\x98\x1b[01m\x1b[Kgravity_block_offset_\x1b[m\x1b[K\xe2\x80\x99?\n'}
[9.709513] (sfuise) StderrLine: {'line': b'  717 |             calib_param.t_nav_uwb += inc_full.segment<Linearizer::OFFSET_SIZE>(\x1b[01;31m\x1b[Kgravity_block_offset\x1b[m\x1b[K + Linearizer::TRANS_OFFSET);\n'}
[9.709700] (sfuise) StderrLine: {'line': b'      |                                                                                \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[9.709863] (sfuise) StderrLine: {'line': b'      |                                                                                \x1b[32m\x1b[Kgravity_block_offset_\x1b[m\x1b[K\n'}
[9.742853] (-) TimerEvent: {}
[9.843336] (-) TimerEvent: {}
[9.943936] (-) TimerEvent: {}
[10.044645] (-) TimerEvent: {}
[10.053540] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[10.054432] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[10.055144] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[10.055747] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[10.056187] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[10.056394] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[10.056593] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[10.056795] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[10.057073] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[10.057264] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[10.057450] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[10.057641] (sfuise) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.057871] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.058162] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.058400] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.058621] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.058847] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:85:80:\x1b[m\x1b[K   required from here\n'}
[10.059061] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[10.059352] (sfuise) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[10.059587] (sfuise) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.059777] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[10.059983] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[10.060199] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[10.060385] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[10.060570] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[10.060754] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[10.060961] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[10.061161] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[10.061346] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[10.061530] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[10.061715] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[10.061941] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.062335] (sfuise) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[10.062578] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[10.062787] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[10.063021] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.063311] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.063835] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.064090] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.064360] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.064677] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.065009] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.065300] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:85:80:\x1b[m\x1b[K   required from here\n'}
[10.065536] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.065778] (sfuise) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[10.066024] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.066241] (sfuise) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.066485] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.066763] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.067059] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.067313] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.067655] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:85:80:\x1b[m\x1b[K   required from here\n'}
[10.067861] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.068154] (sfuise) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[10.068376] (sfuise) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[10.068588] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.068958] (sfuise) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[10.069201] (sfuise) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.069407] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.069711] (sfuise) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[10.069944] (sfuise) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[10.070190] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<geometry_msgs::msg::TransformStamped_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.070470] (sfuise) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[10.070681] (sfuise) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[10.097388] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[10.098886] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[10.099489] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[10.099669] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[10.099791] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[10.099930] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[10.100696] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[10.100886] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[10.101062] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[10.101182] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[10.101288] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[10.101390] (sfuise) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.101514] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.101654] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.101774] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.101915] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.102038] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:88:80:\x1b[m\x1b[K   required from here\n'}
[10.102142] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[10.102298] (sfuise) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[10.102402] (sfuise) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.102501] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[10.102603] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[10.102708] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[10.102806] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[10.102926] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[10.103034] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[10.103132] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[10.103227] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[10.103323] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[10.103424] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[10.103518] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[10.103615] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.103766] (sfuise) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[10.103867] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[10.103988] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[10.104090] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.104221] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.104595] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.104730] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.104881] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.105018] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.105130] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.105255] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:88:80:\x1b[m\x1b[K   required from here\n'}
[10.105355] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.105460] (sfuise) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[10.105556] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.105658] (sfuise) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.105766] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.105883] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.106019] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.106151] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = geometry_msgs::msg::PoseStamped_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.106260] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:88:80:\x1b[m\x1b[K   required from here\n'}
[10.106365] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.106504] (sfuise) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[10.106604] (sfuise) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[10.106702] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.106846] (sfuise) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[10.106978] (sfuise) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.107085] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.107232] (sfuise) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[10.107331] (sfuise) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[10.107428] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<geometry_msgs::msg::PoseWithCovarianceStamped_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&)>, std::function<void(const geometry_msgs::msg::PoseStamped_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> >, std::default_delete<geometry_msgs::msg::PoseStamped_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const geometry_msgs::msg::PoseStamped_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<geometry_msgs::msg::PoseStamped_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.107580] (sfuise) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[10.107680] (sfuise) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[10.144776] (-) TimerEvent: {}
[10.156460] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[10.156954] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[10.157147] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[10.157605] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[10.158188] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[10.158628] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[10.158781] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[10.158926] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[10.159069] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[10.159201] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[10.159299] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[10.159387] (sfuise) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; MessageT = std_msgs::msg::Bool_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.159507] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Bool_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.159611] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Bool_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.159733] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.159835] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.159941] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:95:67:\x1b[m\x1b[K   required from here\n'}
[10.160027] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Bool_<std::allocator<void> >, std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[10.160151] (sfuise) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[10.160235] (sfuise) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.160312] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[10.160393] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[10.160472] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[10.160551] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[10.160629] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[10.160706] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[10.160811] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[10.160949] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[10.161050] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[10.161130] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[10.161208] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[10.161286] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.161414] (sfuise) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[10.161493] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[10.161568] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[10.161649] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.161754] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.162025] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; MessageT = std_msgs::msg::Bool_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.162117] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Bool_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.162228] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Bool_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.162330] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.162423] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.162507] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:95:67:\x1b[m\x1b[K   required from here\n'}
[10.162600] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.162685] (sfuise) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[10.162765] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.162844] (sfuise) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; MessageT = std_msgs::msg::Bool_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.162955] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Bool_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.163050] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Bool_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.163140] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.163238] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Bool_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Bool_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Bool_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.163344] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:95:67:\x1b[m\x1b[K   required from here\n'}
[10.163431] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.163537] (sfuise) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[10.163618] (sfuise) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[10.163696] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Bool_<std::allocator<void> >, std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.163813] (sfuise) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[10.163894] (sfuise) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.163994] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.164109] (sfuise) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[10.164189] (sfuise) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[10.164262] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Bool_<std::allocator<void> >, std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<sfuise_msgs::msg::Calib_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Bool_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Bool_<std::allocator<void> >, std::default_delete<std_msgs::msg::Bool_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Bool_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Bool_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.164371] (sfuise) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[10.164448] (sfuise) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[10.196659] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[10.197459] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[10.198166] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[10.198714] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[10.199098] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[10.199282] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[10.199421] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[10.199556] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[10.199691] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[10.199833] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[10.200011] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[10.200115] (sfuise) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; MessageT = nav_msgs::msg::Path_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.200237] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = nav_msgs::msg::Path_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = nav_msgs::msg::Path_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.200369] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Path_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = nav_msgs::msg::Path_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.200489] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Path_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.200600] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Path_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.200716] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:97:65:\x1b[m\x1b[K   required from here\n'}
[10.200810] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<nav_msgs::msg::Path_<std::allocator<void> >, std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[10.200987] (sfuise) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[10.201083] (sfuise) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.201170] (sfuise) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[10.201260] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[10.201388] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[10.201516] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[10.201604] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[10.201696] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[10.201788] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[10.201876] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[10.201983] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[10.202063] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[10.202143] (sfuise) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:1\x1b[m\x1b[K:\n'}
[10.202224] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.202351] (sfuise) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[10.202434] (sfuise) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[10.202519] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[10.202602] (sfuise) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.202713] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.202977] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; MessageT = nav_msgs::msg::Path_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.203081] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = nav_msgs::msg::Path_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = nav_msgs::msg::Path_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.203192] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Path_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = nav_msgs::msg::Path_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.203301] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Path_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.203396] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Path_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.203502] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:97:65:\x1b[m\x1b[K   required from here\n'}
[10.203590] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.203678] (sfuise) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[10.203764] (sfuise) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.203844] (sfuise) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; MessageT = nav_msgs::msg::Path_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[10.203956] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = nav_msgs::msg::Path_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = nav_msgs::msg::Path_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.204060] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Path_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = nav_msgs::msg::Path_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.204168] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Path_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.204268] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = nav_msgs::msg::Path_<std::allocator<void> >; CallbackT = std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void>, nav_msgs::msg::Path_<std::allocator<void> >, nav_msgs::msg::Path_<std::allocator<void> >, rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<nav_msgs::msg::Path_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.204369] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/EstimationInterface.cpp:97:65:\x1b[m\x1b[K   required from here\n'}
[10.204452] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.204572] (sfuise) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[10.204656] (sfuise) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[10.204738] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<nav_msgs::msg::Path_<std::allocator<void> >, std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.204852] (sfuise) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[10.204959] (sfuise) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[10.205044] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.205155] (sfuise) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[10.205238] (sfuise) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[10.205317] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<nav_msgs::msg::Path_<std::allocator<void> >, std::_Bind<void (EstimationInterface::*(EstimationInterface*, std::_Placeholder<1>))(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<sfuise_msgs::msg::Estimate_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&)>, std::function<void(const nav_msgs::msg::Path_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<nav_msgs::msg::Path_<std::allocator<void> >, std::default_delete<nav_msgs::msg::Path_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const nav_msgs::msg::Path_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<nav_msgs::msg::Path_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[10.205429] (sfuise) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[10.205507] (sfuise) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[10.245000] (-) TimerEvent: {}
[10.345443] (-) TimerEvent: {}
[10.446017] (-) TimerEvent: {}
[10.546502] (-) TimerEvent: {}
[10.647024] (-) TimerEvent: {}
[10.747453] (-) TimerEvent: {}
[10.848002] (-) TimerEvent: {}
[10.948557] (-) TimerEvent: {}
[11.049027] (-) TimerEvent: {}
[11.149560] (-) TimerEvent: {}
[11.250087] (-) TimerEvent: {}
[11.350633] (-) TimerEvent: {}
[11.451219] (-) TimerEvent: {}
[11.551825] (-) TimerEvent: {}
[11.652320] (-) TimerEvent: {}
[11.752916] (-) TimerEvent: {}
[11.853482] (-) TimerEvent: {}
[11.954084] (-) TimerEvent: {}
[12.054693] (-) TimerEvent: {}
[12.155177] (-) TimerEvent: {}
[12.255670] (-) TimerEvent: {}
[12.356136] (-) TimerEvent: {}
[12.456625] (-) TimerEvent: {}
[12.557138] (-) TimerEvent: {}
[12.657570] (-) TimerEvent: {}
[12.758043] (-) TimerEvent: {}
[12.858599] (-) TimerEvent: {}
[12.959171] (-) TimerEvent: {}
[13.059725] (-) TimerEvent: {}
[13.160156] (-) TimerEvent: {}
[13.260691] (-) TimerEvent: {}
[13.361132] (-) TimerEvent: {}
[13.461554] (-) TimerEvent: {}
[13.562022] (-) TimerEvent: {}
[13.662437] (-) TimerEvent: {}
[13.762958] (-) TimerEvent: {}
[13.863523] (-) TimerEvent: {}
[13.964102] (-) TimerEvent: {}
[14.064612] (-) TimerEvent: {}
[14.165121] (-) TimerEvent: {}
[14.265547] (-) TimerEvent: {}
[14.366087] (-) TimerEvent: {}
[14.466523] (-) TimerEvent: {}
[14.567038] (-) TimerEvent: {}
[14.667577] (-) TimerEvent: {}
[14.768118] (-) TimerEvent: {}
[14.868676] (-) TimerEvent: {}
[14.969224] (-) TimerEvent: {}
[15.069750] (-) TimerEvent: {}
[15.170209] (-) TimerEvent: {}
[15.270767] (-) TimerEvent: {}
[15.371332] (-) TimerEvent: {}
[15.472057] (-) TimerEvent: {}
[15.572834] (-) TimerEvent: {}
[15.673302] (-) TimerEvent: {}
[15.774021] (-) TimerEvent: {}
[15.874851] (-) TimerEvent: {}
[15.975865] (-) TimerEvent: {}
[16.076453] (-) TimerEvent: {}
[16.177053] (-) TimerEvent: {}
[16.277702] (-) TimerEvent: {}
[16.378302] (-) TimerEvent: {}
[16.479026] (-) TimerEvent: {}
[16.579591] (-) TimerEvent: {}
[16.680180] (-) TimerEvent: {}
[16.780786] (-) TimerEvent: {}
[16.881430] (-) TimerEvent: {}
[16.982051] (-) TimerEvent: {}
[17.083028] (-) TimerEvent: {}
[17.183758] (-) TimerEvent: {}
[17.284433] (-) TimerEvent: {}
[17.385008] (-) TimerEvent: {}
[17.485561] (-) TimerEvent: {}
[17.586204] (-) TimerEvent: {}
[17.686645] (-) TimerEvent: {}
[17.787092] (-) TimerEvent: {}
[17.887468] (-) TimerEvent: {}
[17.987959] (-) TimerEvent: {}
[18.088408] (-) TimerEvent: {}
[18.188875] (-) TimerEvent: {}
[18.289353] (-) TimerEvent: {}
[18.389814] (-) TimerEvent: {}
[18.490303] (-) TimerEvent: {}
[18.590762] (-) TimerEvent: {}
[18.691128] (-) TimerEvent: {}
[18.791581] (-) TimerEvent: {}
[18.892058] (-) TimerEvent: {}
[18.992546] (-) TimerEvent: {}
[19.093025] (-) TimerEvent: {}
[19.193475] (-) TimerEvent: {}
[19.293945] (-) TimerEvent: {}
[19.394415] (-) TimerEvent: {}
[19.494929] (-) TimerEvent: {}
[19.595416] (-) TimerEvent: {}
[19.695927] (-) TimerEvent: {}
[19.796337] (-) TimerEvent: {}
[19.896812] (-) TimerEvent: {}
[19.997316] (-) TimerEvent: {}
[20.097797] (-) TimerEvent: {}
[20.198313] (-) TimerEvent: {}
[20.298709] (-) TimerEvent: {}
[20.399203] (-) TimerEvent: {}
[20.499692] (-) TimerEvent: {}
[20.600089] (-) TimerEvent: {}
[20.700543] (-) TimerEvent: {}
[20.801008] (-) TimerEvent: {}
[20.901387] (-) TimerEvent: {}
[21.001788] (-) TimerEvent: {}
[21.102249] (-) TimerEvent: {}
[21.202742] (-) TimerEvent: {}
[21.303253] (-) TimerEvent: {}
[21.403761] (-) TimerEvent: {}
[21.504303] (-) TimerEvent: {}
[21.579530] (sfuise) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/EstimationInterface.dir/build.make:76: CMakeFiles/EstimationInterface.dir/src/EstimationInterface.cpp.o] Error 1\n'}
[21.580069] (sfuise) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:139: CMakeFiles/EstimationInterface.dir/all] Error 2\n'}
[21.580311] (sfuise) StderrLine: {'line': b'gmake[1]: *** Waiting for unfinished jobs....\n'}
[21.604526] (-) TimerEvent: {}
[21.705032] (-) TimerEvent: {}
[21.805443] (-) TimerEvent: {}
[21.905922] (-) TimerEvent: {}
[22.006482] (-) TimerEvent: {}
[22.107073] (-) TimerEvent: {}
[22.207645] (-) TimerEvent: {}
[22.308136] (-) TimerEvent: {}
[22.408586] (-) TimerEvent: {}
[22.509155] (-) TimerEvent: {}
[22.609762] (-) TimerEvent: {}
[22.710247] (-) TimerEvent: {}
[22.810803] (-) TimerEvent: {}
[22.911271] (-) TimerEvent: {}
[23.011828] (-) TimerEvent: {}
[23.112265] (-) TimerEvent: {}
[23.212847] (-) TimerEvent: {}
[23.313345] (-) TimerEvent: {}
[23.413928] (-) TimerEvent: {}
[23.514357] (-) TimerEvent: {}
[23.614915] (-) TimerEvent: {}
[23.715362] (-) TimerEvent: {}
[23.815875] (-) TimerEvent: {}
[23.916417] (-) TimerEvent: {}
[24.016980] (-) TimerEvent: {}
[24.117529] (-) TimerEvent: {}
[24.218069] (-) TimerEvent: {}
[24.318622] (-) TimerEvent: {}
[24.419207] (-) TimerEvent: {}
[24.519620] (-) TimerEvent: {}
[24.620207] (-) TimerEvent: {}
[24.720724] (-) TimerEvent: {}
[24.821234] (-) TimerEvent: {}
[24.921718] (-) TimerEvent: {}
[25.022196] (-) TimerEvent: {}
[25.122648] (-) TimerEvent: {}
[25.223156] (-) TimerEvent: {}
[25.323686] (-) TimerEvent: {}
[25.424040] (-) TimerEvent: {}
[25.524377] (-) TimerEvent: {}
[25.624860] (-) TimerEvent: {}
[25.725280] (-) TimerEvent: {}
[25.825781] (-) TimerEvent: {}
[25.926263] (-) TimerEvent: {}
[25.954088] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool SplineFusion::initialization()\x1b[m\x1b[K\xe2\x80\x99:\n'}
[25.954350] (sfuise) StderrLine: {'line': b'\x1b[01m\x1b[K/home/dsh/Documents/work_logs/code/SFUISE/sfuise_ws/src/sfuise/src/SplineFusion.cpp:314:21:\x1b[m\x1b[K \x1b[01;35m\x1b[Kwarning: \x1b[m\x1b[Kcontrol reaches end of non-void function [\x1b[01;35m\x1b[K\x1b]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wreturn-type\x07-Wreturn-type\x1b]8;;\x07\x1b[m\x1b[K]\n'}
[25.954458] (sfuise) StderrLine: {'line': b'  314 |             int64_t \x1b[01;35m\x1b[Kmin_time\x1b[m\x1b[K = 1e18; // \xe5\x88\x9d\xe5\xa7\x8b\xe5\x8c\x96\xe6\x9c\x80\xe5\xb0\x8f\xe6\x97\xb6\xe9\x97\xb4\n'}
[25.954558] (sfuise) StderrLine: {'line': b'      |                     \x1b[01;35m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[26.026516] (-) TimerEvent: {}
[26.074268] (sfuise) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/SplineFusion.dir/build.make:76: CMakeFiles/SplineFusion.dir/src/SplineFusion.cpp.o] Error 1\n'}
[26.074505] (sfuise) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/SplineFusion.dir/all] Error 2\n'}
[26.074648] (sfuise) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[26.077361] (sfuise) CommandEnded: {'returncode': 2}
[26.087012] (sfuise) JobEnded: {'identifier': 'sfuise', 'rc': 2}
[26.112413] (-) EventReactorShutdown: {}
